[tool.poetry]
name = "asgi-correlation-id"
version = "0.1.0"
description = "Middleware that propagates HTTP header correlation IDs to project logs"
authors = ["Jonas Krüger Svensson <jonas-ks@hotmail.com>", "Sondre Lillebø Gundersen <sondrelg@live.no>"]
license = "BSD-4-Clause"
readme = "README.md"
homepage = "https://github.com/snok/asgi-correlation-id"
repository = "https://github.com/snok/asgi-correlation-id"
keywords = [
    'asgi',
    'async',
    'correlation',
    'correlation-id',
    'id',
    'request',
    'request-id',
    'x-request-id',
    'tracing',
    'fastapi',
    'starlette',
    'logging',
    'middleware',
    'uuid',
    'sentry',
    'celery'
]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Environment :: Web Environment',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: BSD License',
    'Operating System :: OS Independent',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Topic :: Internet :: WWW/HTTP',
    'Topic :: Internet :: WWW/HTTP :: Dynamic Content',
    'Topic :: Software Development',
    'Topic :: Software Development :: Libraries',
    'Topic :: Software Development :: Libraries :: Application Frameworks',
    'Topic :: Software Development :: Libraries :: Python Modules',
]

[tool.poetry.dependencies]
python = "^3.7"
starlette = "^0.16.0"

[tool.poetry.dev-dependencies]
pre-commit = "^1.21.0"
pytest = "^5.4"
pytest-cov = "^2.8.1"
pytest-mock = "^3"
sentry-sdk = "^0.14.3"
pytest-asyncio = "^0.14.0"
celery = "^5.0.2"
redis = "^3.5.3"
fastapi = "^0.70.0"
httpx = "^0.20.0"
coverage = {extras = ["toml"], version = "^6.0.2"}

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.black]
line-length = 120
skip-string-normalization = true
experimental-string-processing = true
quiet = true

[tool.isort]
profile = "black"
line_length = 120

[tool.coverage.run]
omit = []

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
    "if TYPE_CHECKING:",
    "pragma: no cover",
]
