Metadata-Version: 2.1
Name: open-backtest
Version: 4.0.3
Summary: Open Backtest is a beginner friendly & powerful backtesting engine for crypto trading
Home-page: https://github.com/Shaft-3796/OpenBacktest
Author: Shaft3796
Author-email: sh4ft.me@gmail.com
License: UNKNOWN
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE

# Open Backtest

<img src="https://cdn.discordapp.com/attachments/901790872033714216/901790945127841862/IMG_2895.JPG" alt="drawing" width="300"/>

### Open source & beginner friendly crypto trading backtest library
- **English** <a name="English"></a>
- **Français** <a name="Français"></a>

<br>

## What is it ? 📈

**Passionate about the world of crypto and about development I decided to create a python library because I found very
 annoying for beginners to just run a simple backtest. Open Backtest got created to give apprentice but also confirmed 
 programmers a powerful and easy to use backtesting tool**

## How does it work ? 🔧

**Open Backtest is currently made with a core engine that use different classes, it can run a backtest with binance data
 and it can handle different timeframes. The library can also download and save data as a csv file to be able to load 
 it to save a considerable amount of time. The wallet class will handle orders and the data handler will summarize and 
 calculate all required data to analyze the backtest but also to plot graphs.**
 
 ##### Requirements :
 
 - Pandas
 - Numpy
 - Matplotlib
 - Python-binance
 
 *All requirements will be downloaded and installed with Open Backtest installation*
 
 ## Doc 📝
 
**The documentation will be divided in two parts, at the moment just one engine to run basic backtest is made but I want to add a lot of engines. The first part of the doc will show how to run a backtest with at the moment juste the only engine created. The second part of the doc will describe more technically the classes and functions that can be used if you already want to run a specific strategy like grid trading**

*Coming as soon as possible*



