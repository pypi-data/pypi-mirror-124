{
  "format_version": "0.1",
  "terraform_version": "0.13.4",
  "planned_values": {
    "root_module": {
      "resources": [
        {
          "address": "aws_iam_policy.lambda_policy",
          "mode": "managed",
          "type": "aws_iam_policy",
          "name": "lambda_policy",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "description": "test_lambda_policy",
            "name": "test_lambda_policy",
            "name_prefix": null,
            "path": "/",
            "policy": "{\n \"Version\": \"2012-10-17\",\n \"Statement\": [\n   {\n     \"Action\": \"*\",\n     \"Effect\": \"Allow\",\n     \"Resource\": \"*\"\n   },\n   {\n     \"Action\": [\n       \"logs:CreateLogGroup\",\n       \"logs:CreateLogStream\",\n       \"logs:PutLogEvents\"\n     ],\n     \"Effect\": \"Allow\",\n     \"Resource\": \"*\"\n   }\n ]\n}\n",
            "tags": null
          }
        },
        {
          "address": "aws_iam_role.lambda_exec",
          "mode": "managed",
          "type": "aws_iam_role",
          "name": "lambda_exec",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
            "description": null,
            "force_detach_policies": false,
            "inline_policy": [],
            "max_session_duration": 3600,
            "name": "serverless_example_lambda",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": null,
            "tags": null
          }
        },
        {
          "address": "aws_iam_role_policy_attachment.terraform_lambda_iam_policy_basic_execution",
          "mode": "managed",
          "type": "aws_iam_role_policy_attachment",
          "name": "terraform_lambda_iam_policy_basic_execution",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "policy_arn": "aws_iam_policy.lambda_policy.arn",
            "role": "aws_iam_role.lambda_exec.id"
          }
        },
        {
          "address": "aws_lambda_alias.my-lambda-alias",
          "mode": "managed",
          "type": "aws_lambda_alias",
          "name": "my-lambda-alias",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "description": "a sample description",
            "function_name": "aws_lambda_function.example.arn",
            "function_version": "$LATEST",
            "name": "v1",
            "routing_config": []
          }
        },
        {
          "address": "aws_lambda_function.example",
          "mode": "managed",
          "type": "aws_lambda_function",
          "name": "example",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "code_signing_config_arn": null,
            "dead_letter_config": [],
            "description": null,
            "environment": [],
            "file_system_config": [],
            "filename": "example.zip",
            "function_name": "ServerlessExample",
            "handler": "main.handler",
            "image_config": [],
            "image_uri": null,
            "kms_key_arn": null,
            "layers": null,
            "memory_size": 128,
            "package_type": "Zip",
            "publish": false,
            "reserved_concurrent_executions": -1,
            "role": "aws_iam_role.lambda_exec.arn",
            "runtime": "nodejs10.x",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "tags": null,
            "timeout": 3,
            "timeouts": null,
            "tracing_config": [],
            "vpc_config": []
          }
        },
        {
          "address": "aws_lambda_permission.lambda_resource_policy",
          "mode": "managed",
          "type": "aws_lambda_permission",
          "name": "lambda_resource_policy",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "111111111111:function:ServerlessExample",
            "principal": "111111111111",
            "qualifier": "v1",
            "source_account": null,
            "source_arn": null,
            "statement_id": "AllowExecution1",
            "statement_id_prefix": null
          }
        }
      ]
    }
  },
  "resource_changes": [
    {
      "address": "aws_iam_policy.lambda_policy",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "lambda_policy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": "test_lambda_policy",
          "name": "test_lambda_policy",
          "name_prefix": null,
          "path": "/",
          "policy": "{\n \"Version\": \"2012-10-17\",\n \"Statement\": [\n   {\n     \"Action\": \"*\",\n     \"Effect\": \"Allow\",\n     \"Resource\": \"*\"\n   },\n   {\n     \"Action\": [\n       \"logs:CreateLogGroup\",\n       \"logs:CreateLogStream\",\n       \"logs:PutLogEvents\"\n     ],\n     \"Effect\": \"Allow\",\n     \"Resource\": \"*\"\n   }\n ]\n}\n",
          "tags": null
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "policy_id": true,
          "tags_all": true
        }
      }
    },
    {
      "address": "aws_iam_role.lambda_exec",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "lambda_exec",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
          "description": null,
          "force_detach_policies": false,
          "inline_policy": [],
          "max_session_duration": 3600,
          "name": "serverless_example_lambda",
          "name_prefix": null,
          "path": "/",
          "permissions_boundary": null,
          "tags": null
        },
        "after_unknown": {
          "arn": true,
          "create_date": true,
          "id": true,
          "inline_policy": [],
          "managed_policy_arns": true,
          "tags_all": true,
          "unique_id": true
        }
      }
    },
    {
      "address": "aws_iam_role_policy_attachment.terraform_lambda_iam_policy_basic_execution",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "terraform_lambda_iam_policy_basic_execution",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "policy_arn": "aws_iam_policy.lambda_policy.arn",
          "role": "aws_iam_role.lambda_exec.id"
        },
        "after_unknown": {
          "id": true
        }
      }
    },
    {
      "address": "aws_lambda_alias.my-lambda-alias",
      "mode": "managed",
      "type": "aws_lambda_alias",
      "name": "my-lambda-alias",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": "a sample description",
          "function_name": "aws_lambda_function.example.arn",
          "function_version": "$LATEST",
          "name": "v1",
          "routing_config": []
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "invoke_arn": true,
          "routing_config": []
        }
      }
    },
    {
      "address": "aws_lambda_function.example",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "example",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "code_signing_config_arn": null,
          "dead_letter_config": [],
          "description": null,
          "environment": [],
          "file_system_config": [],
          "filename": "example.zip",
          "function_name": "ServerlessExample",
          "handler": "main.handler",
          "image_config": [],
          "image_uri": null,
          "kms_key_arn": null,
          "layers": null,
          "memory_size": 128,
          "package_type": "Zip",
          "publish": false,
          "reserved_concurrent_executions": -1,
          "role": "aws_iam_role.lambda_exec.arn",
          "runtime": "nodejs10.x",
          "s3_bucket": null,
          "s3_key": null,
          "s3_object_version": null,
          "tags": null,
          "timeout": 3,
          "timeouts": null,
          "tracing_config": [],
          "vpc_config": []
        },
        "after_unknown": {
          "arn": true,
          "dead_letter_config": [],
          "environment": [],
          "file_system_config": [],
          "id": true,
          "image_config": [],
          "invoke_arn": true,
          "last_modified": true,
          "qualified_arn": true,
          "signing_job_arn": true,
          "signing_profile_version_arn": true,
          "source_code_hash": true,
          "source_code_size": true,
          "tags_all": true,
          "tracing_config": [],
          "version": true,
          "vpc_config": []
        }
      }
    },
    {
      "address": "aws_lambda_permission.lambda_resource_policy",
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "lambda_resource_policy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "action": "lambda:InvokeFunction",
          "event_source_token": null,
          "function_name": "111111111111:function:ServerlessExample",
          "principal": "111111111111",
          "qualifier": "v1",
          "source_account": null,
          "source_arn": null,
          "statement_id": "AllowExecution1",
          "statement_id_prefix": null
        },
        "after_unknown": {
          "id": true
        }
      }
    }
  ],
  "prior_state": {
    "format_version": "0.1",
    "terraform_version": "0.13.4",
    "values": {
      "root_module": {
        "resources": [
          {
            "address": "data.aws_caller_identity.current",
            "mode": "data",
            "type": "aws_caller_identity",
            "name": "current",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "account_id": "111111111111",
              "arn": "arn:aws:sts::111111111111:assumed-role/AWSReservedSSO_admin_in_develop_fb314e4593b59bf2/imanuel.m@indeni.com",
              "id": "111111111111",
              "user_id": "AROARVZ4AQRHRH7ZLU5BZ:imanuel.m@indeni.com"
            }
          }
        ]
      }
    }
  },
  "configuration": {
    "provider_config": {
      "aws": {
        "name": "aws",
        "expressions": {
          "region": {
            "constant_value": "us-east-1"
          }
        }
      }
    },
    "root_module": {
      "resources": [
        {
          "address": "aws_iam_policy.lambda_policy",
          "mode": "managed",
          "type": "aws_iam_policy",
          "name": "lambda_policy",
          "provider_config_key": "aws",
          "expressions": {
            "description": {
              "constant_value": "test_lambda_policy"
            },
            "name": {
              "constant_value": "test_lambda_policy"
            },
            "policy": {
              "constant_value": "{\n \"Version\": \"2012-10-17\",\n \"Statement\": [\n   {\n     \"Action\": \"*\",\n     \"Effect\": \"Allow\",\n     \"Resource\": \"*\"\n   },\n   {\n     \"Action\": [\n       \"logs:CreateLogGroup\",\n       \"logs:CreateLogStream\",\n       \"logs:PutLogEvents\"\n     ],\n     \"Effect\": \"Allow\",\n     \"Resource\": \"*\"\n   }\n ]\n}\n"
            }
          },
          "schema_version": 0,
          "raw_data": {
            "FileName": "main.tf",
            "StartLine": 34,
            "EndLine": 59
          }
        },
        {
          "address": "aws_iam_role.lambda_exec",
          "mode": "managed",
          "type": "aws_iam_role",
          "name": "lambda_exec",
          "provider_config_key": "aws",
          "expressions": {
            "assume_role_policy": {
              "constant_value": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n"
            },
            "name": {
              "constant_value": "serverless_example_lambda"
            }
          },
          "schema_version": 0,
          "raw_data": {
            "FileName": "main.tf",
            "StartLine": 13,
            "EndLine": 32
          }
        },
        {
          "address": "aws_iam_role_policy_attachment.terraform_lambda_iam_policy_basic_execution",
          "mode": "managed",
          "type": "aws_iam_role_policy_attachment",
          "name": "terraform_lambda_iam_policy_basic_execution",
          "provider_config_key": "aws",
          "expressions": {
            "policy_arn": {
              "references": [
                "aws_iam_policy.lambda_policy"
              ]
            },
            "role": {
              "references": [
                "aws_iam_role.lambda_exec"
              ]
            }
          },
          "schema_version": 0,
          "raw_data": {
            "FileName": "main.tf",
            "StartLine": 61,
            "EndLine": 64
          }
        },
        {
          "address": "aws_lambda_alias.my-lambda-alias",
          "mode": "managed",
          "type": "aws_lambda_alias",
          "name": "my-lambda-alias",
          "provider_config_key": "aws",
          "expressions": {
            "description": {
              "constant_value": "a sample description"
            },
            "function_name": {
              "references": [
                "aws_lambda_function.example"
              ]
            },
            "function_version": {
              "constant_value": "$LATEST"
            },
            "name": {
              "constant_value": "v1"
            }
          },
          "schema_version": 0,
          "raw_data": {
            "FileName": "main.tf",
            "StartLine": 66,
            "EndLine": 71
          }
        },
        {
          "address": "aws_lambda_function.example",
          "mode": "managed",
          "type": "aws_lambda_function",
          "name": "example",
          "provider_config_key": "aws",
          "expressions": {
            "filename": {
              "constant_value": "example.zip"
            },
            "function_name": {
              "constant_value": "ServerlessExample"
            },
            "handler": {
              "constant_value": "main.handler"
            },
            "role": {
              "references": [
                "aws_iam_role.lambda_exec"
              ]
            },
            "runtime": {
              "constant_value": "nodejs10.x"
            }
          },
          "schema_version": 0,
          "raw_data": {
            "FileName": "main.tf",
            "StartLine": 4,
            "EndLine": 10
          }
        },
        {
          "address": "aws_lambda_permission.lambda_resource_policy",
          "mode": "managed",
          "type": "aws_lambda_permission",
          "name": "lambda_resource_policy",
          "provider_config_key": "aws",
          "expressions": {
            "action": {
              "constant_value": "lambda:InvokeFunction"
            },
            "function_name": {
              "references": [
                "data.aws_caller_identity.current",
                "aws_lambda_function.example"
              ]
            },
            "principal": {
              "references": [
                "data.aws_caller_identity.current"
              ]
            },
            "qualifier": {
              "references": [
                "aws_lambda_alias.my-lambda-alias"
              ]
            },
            "statement_id": {
              "constant_value": "AllowExecution1"
            }
          },
          "schema_version": 0,
          "raw_data": {
            "FileName": "main.tf",
            "StartLine": 73,
            "EndLine": 79
          }
        },
        {
          "address": "data.aws_caller_identity.current",
          "mode": "data",
          "type": "aws_caller_identity",
          "name": "current",
          "provider_config_key": "aws",
          "schema_version": 0,
          "raw_data": {
            "FileName": "main.tf",
            "StartLine": 2,
            "EndLine": 2
          }
        }
      ]
    }
  }
}
