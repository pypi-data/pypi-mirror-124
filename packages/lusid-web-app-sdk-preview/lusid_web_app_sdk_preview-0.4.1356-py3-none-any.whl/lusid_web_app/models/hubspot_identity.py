# coding: utf-8

"""
    LUSID Website API

    FINBOURNE Technology  # noqa: E501

    The version of the OpenAPI document: 0.4.1356
    Contact: info@finbourne.com
    Generated by: https://openapi-generator.tech
"""


try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from lusid_web_app.configuration import Configuration


class HubspotIdentity(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
      required_map (dict): The key is attribute name
                           and the value is whether it is 'required' or 'optional'.
    """
    openapi_types = {
        'value': 'str',
        'type': 'str',
        'timestamp': 'int',
        'is_primary': 'bool'
    }

    attribute_map = {
        'value': 'value',
        'type': 'type',
        'timestamp': 'timestamp',
        'is_primary': 'isPrimary'
    }

    required_map = {
        'value': 'optional',
        'type': 'optional',
        'timestamp': 'optional',
        'is_primary': 'optional'
    }

    def __init__(self, value=None, type=None, timestamp=None, is_primary=None, local_vars_configuration=None):  # noqa: E501
        """HubspotIdentity - a model defined in OpenAPI"
        
        :param value: 
        :type value: str
        :param type: 
        :type type: str
        :param timestamp: 
        :type timestamp: int
        :param is_primary: 
        :type is_primary: bool

        """  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration.get_default_copy()
        self.local_vars_configuration = local_vars_configuration

        self._value = None
        self._type = None
        self._timestamp = None
        self._is_primary = None
        self.discriminator = None

        self.value = value
        self.type = type
        if timestamp is not None:
            self.timestamp = timestamp
        self.is_primary = is_primary

    @property
    def value(self):
        """Gets the value of this HubspotIdentity.  # noqa: E501


        :return: The value of this HubspotIdentity.  # noqa: E501
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this HubspotIdentity.


        :param value: The value of this HubspotIdentity.  # noqa: E501
        :type value: str
        """

        self._value = value

    @property
    def type(self):
        """Gets the type of this HubspotIdentity.  # noqa: E501


        :return: The type of this HubspotIdentity.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this HubspotIdentity.


        :param type: The type of this HubspotIdentity.  # noqa: E501
        :type type: str
        """

        self._type = type

    @property
    def timestamp(self):
        """Gets the timestamp of this HubspotIdentity.  # noqa: E501


        :return: The timestamp of this HubspotIdentity.  # noqa: E501
        :rtype: int
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this HubspotIdentity.


        :param timestamp: The timestamp of this HubspotIdentity.  # noqa: E501
        :type timestamp: int
        """

        self._timestamp = timestamp

    @property
    def is_primary(self):
        """Gets the is_primary of this HubspotIdentity.  # noqa: E501


        :return: The is_primary of this HubspotIdentity.  # noqa: E501
        :rtype: bool
        """
        return self._is_primary

    @is_primary.setter
    def is_primary(self, is_primary):
        """Sets the is_primary of this HubspotIdentity.


        :param is_primary: The is_primary of this HubspotIdentity.  # noqa: E501
        :type is_primary: bool
        """

        self._is_primary = is_primary

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, HubspotIdentity):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, HubspotIdentity):
            return True

        return self.to_dict() != other.to_dict()
