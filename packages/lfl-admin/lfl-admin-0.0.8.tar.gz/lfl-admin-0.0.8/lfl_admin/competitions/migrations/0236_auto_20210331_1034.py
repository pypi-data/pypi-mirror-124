# Generated by Django 3.1.7 on 2021-03-31 10:34

import bitfield.models
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import isc_common.fields.related


class Migration(migrations.Migration):
    dependencies = [
        ('user_ext', '0059_auto_20210331_1020'),
        ('decor', '0026_auto_20210326_0949'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('common', '0025_auto_20210309_0847'),
        ('region', '0044_auto_20210326_0949'),
        ('competitions', '0235_auto_20210331_1020'),
    ]

    operations = [
        migrations.CreateModel(
            name='Assists',
            fields=[
                ('old_id', models.BigIntegerField(blank=True, db_index=True, null=True, unique=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Идентификатор')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Дата мягкого удаления')),
                ('editing', models.BooleanField(default=True, verbose_name='Возможность редактирования')),
                ('deliting', models.BooleanField(default=True, verbose_name='Возможность удаления')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='Последнее обновление')),
                ('club', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.clubs')),
                ('match', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.calendar')),
                ('player', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.players')),
                ('tournament', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.tournaments')),
            ],
            options={
                'verbose_name': 'Голевые пасы в сыгранных матчах. Другое название игрока: ассистент.',
            },
        ),
        migrations.CreateModel(
            name='Cards',
            fields=[
                ('old_id', models.BigIntegerField(blank=True, db_index=True, null=True, unique=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Идентификатор')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Дата мягкого удаления')),
                ('editing', models.BooleanField(default=True, verbose_name='Возможность редактирования')),
                ('deliting', models.BooleanField(default=True, verbose_name='Возможность удаления')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='Последнее обновление')),
                ('minute', models.SmallIntegerField()),
                ('card_type', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.card_types')),
                ('club', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.clubs')),
                ('match', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.calendar')),
                ('player', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.players')),
            ],
            options={
                'verbose_name': 'Карточки игроков в сыгранных матчах: три типа. 1. жёлтая к. 2. Вторая ж.к. 3. красная карточка',
            },
        ),
        migrations.CreateModel(
            name='Referees',
            fields=[
                ('old_id', models.BigIntegerField(blank=True, db_index=True, null=True, unique=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Идентификатор')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Дата мягкого удаления')),
                ('editing', models.BooleanField(default=True, verbose_name='Возможность редактирования')),
                ('deliting', models.BooleanField(default=True, verbose_name='Возможность удаления')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='Последнее обновление')),
                ('debut', models.DateField(blank=True, null=True)),
                ('props', bitfield.models.BitField((('active', 'active'),), db_index=True, default=1)),
                ('contact', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='user_ext.contacts')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='user_ext.persons')),
                ('referee_post', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='common.posts')),
            ],
            options={
                'verbose_name': 'Судьи',
            },
        ),
        migrations.CreateModel(
            name='Keepers',
            fields=[
                ('old_id', models.BigIntegerField(blank=True, db_index=True, null=True, unique=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Идентификатор')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Дата мягкого удаления')),
                ('editing', models.BooleanField(default=True, verbose_name='Возможность редактирования')),
                ('deliting', models.BooleanField(default=True, verbose_name='Возможность удаления')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='Последнее обновление')),
                ('goals', models.SmallIntegerField()),
                ('club', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.clubs')),
                ('match', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.calendar')),
                ('player', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.players')),
                ('tournament', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.tournaments')),
            ],
            options={
                'verbose_name': 'Хранение пропущенных вратарями голов (мячей)',
            },
        ),
        migrations.CreateModel(
            name='Goals',
            fields=[
                ('old_id', models.BigIntegerField(blank=True, db_index=True, null=True, unique=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Идентификатор')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Дата мягкого удаления')),
                ('editing', models.BooleanField(default=True, verbose_name='Возможность редактирования')),
                ('deliting', models.BooleanField(default=True, verbose_name='Возможность удаления')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='Последнее обновление')),
                ('minute', models.SmallIntegerField()),
                ('assist', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.assists')),
                ('club', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.clubs')),
                ('goal_type', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.goals_type')),
                ('match', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.calendar')),
                ('player', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.players')),
                ('tournament', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.tournaments')),
            ],
            options={
                'verbose_name': 'Голы',
            },
        ),
        migrations.CreateModel(
            name='Fouls',
            fields=[
                ('old_id', models.BigIntegerField(blank=True, db_index=True, null=True, unique=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Идентификатор')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Дата мягкого удаления')),
                ('editing', models.BooleanField(default=True, verbose_name='Возможность редактирования')),
                ('deliting', models.BooleanField(default=True, verbose_name='Возможность удаления')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='Последнее обновление')),
                ('minute', models.SmallIntegerField()),
                ('props', bitfield.models.BitField((('penalty', 'penalty'),), db_index=True, default=0)),
                ('club', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.clubs')),
                ('match', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.calendar')),
                ('player', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.players')),
                ('tournament', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.tournaments')),
            ],
            options={
                'verbose_name': 'Возможно таблица, хранящяя события, связанные с минутами на которых были исполнены пенальти. ',
            },
        ),
        migrations.CreateModel(
            name='Fines',
            fields=[
                ('old_id', models.BigIntegerField(blank=True, db_index=True, null=True, unique=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Идентификатор')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Дата мягкого удаления')),
                ('editing', models.BooleanField(default=True, verbose_name='Возможность редактирования')),
                ('deliting', models.BooleanField(default=True, verbose_name='Возможность удаления')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='Последнее обновление')),
                ('date', models.DateField(blank=True, null=True)),
                ('payment', models.IntegerField()),
                ('props', bitfield.models.BitField((('active', 'active'),), db_index=True, default=1)),
                ('remove_restore_date', models.DateField(blank=True, null=True)),
                ('sum', models.IntegerField()),
                ('club', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.clubs')),
                ('kdk', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='decor.news')),
            ],
            options={
                'verbose_name': 'Реестр штрафов',
            },
        ),
        migrations.CreateModel(
            name='Disqualifications',
            fields=[
                ('old_id', models.BigIntegerField(blank=True, db_index=True, null=True, unique=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Идентификатор')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Дата мягкого удаления')),
                ('editing', models.BooleanField(default=True, verbose_name='Возможность редактирования')),
                ('deliting', models.BooleanField(default=True, verbose_name='Возможность удаления')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='Последнее обновление')),
                ('edit_date', models.DateField(blank=True, null=True)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('matches', models.SmallIntegerField(blank=True, null=True)),
                ('props', bitfield.models.BitField((('active', 'active'),), db_index=True, default=1)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('admin', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, related_name='Disqualifications_creator_admin', to=settings.AUTH_USER_MODEL)),
                ('card', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.cards')),
                ('disqualification_type', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.disqualification_types')),
                ('personal_league', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.leagues')),
                ('personal_region', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='region.regions')),
                ('player', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.players')),
                ('tournament', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.tournaments')),
                ('zone', isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.disqualification_zones')),
            ],
            options={
                'verbose_name': 'Список дисквалификаций',
            },
        ),
        migrations.AddField(
            model_name='cards',
            name='referee',
            field=isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.referees'),
        ),
        migrations.AddField(
            model_name='cards',
            name='tournament',
            field=isc_common.fields.related.ForeignKeyProtect(on_delete=django.db.models.deletion.PROTECT, to='competitions.tournaments'),
        ),
        migrations.AddField(
            model_name='calendar',
            name='referee',
            field=isc_common.fields.related.ForeignKeyProtect(default=None, on_delete=django.db.models.deletion.PROTECT, to='competitions.referees'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='disqualifications_text_informations',
            name='disqualification',
            field=isc_common.fields.related.ForeignKeyProtect(default=None, on_delete=django.db.models.deletion.PROTECT, to='competitions.disqualifications'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='fines_text_informations',
            name='fine',
            field=isc_common.fields.related.ForeignKeyProtect(default=None, on_delete=django.db.models.deletion.PROTECT, to='competitions.fines'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='penalties',
            name='referee',
            field=isc_common.fields.related.ForeignKeyProtect(default=None, on_delete=django.db.models.deletion.PROTECT, to='competitions.referees'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='referee_match',
            name='referee',
            field=isc_common.fields.related.ForeignKeyProtect(default=None, on_delete=django.db.models.deletion.PROTECT, to='competitions.referees'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='referee_zone',
            name='referee',
            field=isc_common.fields.related.ForeignKeyProtect(default=None, on_delete=django.db.models.deletion.PROTECT, to='competitions.referees'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='referees_images',
            name='main_model',
            field=isc_common.fields.related.ForeignKeyProtect(default=None, on_delete=django.db.models.deletion.PROTECT, to='competitions.referees'),
            preserve_default=False,
        ),
    ]
