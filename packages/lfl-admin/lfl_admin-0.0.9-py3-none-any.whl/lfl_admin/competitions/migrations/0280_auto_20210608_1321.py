# Generated by Django 3.2.4 on 2021-06-08 13:21

import bitfield.models
import django.contrib.postgres.fields
from django.db import migrations, models
import django.utils.timezone
import isc_common.fields.code_field
import isc_common.fields.description_field
import isc_common.fields.name_field


class Migration(migrations.Migration):

    dependencies = [
        ('competitions', '0279_divisions_view'),
    ]

    operations = [
        migrations.CreateModel(
            name='Disqualification_zones_view',
            fields=[
                ('old_ids', django.contrib.postgres.fields.ArrayField(base_field=models.BigIntegerField(), blank=True, null=True, size=None, unique=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Идентификатор')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Дата мягкого удаления')),
                ('editing', models.BooleanField(default=True, verbose_name='Возможность редактирования')),
                ('deliting', models.BooleanField(default=True, verbose_name='Возможность удаления')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='Последнее обновление')),
                ('code', isc_common.fields.code_field.CodeStrictField(unique=True)),
                ('name', isc_common.fields.name_field.NameField(blank=True, null=True)),
                ('description', isc_common.fields.description_field.DescriptionField()),
                ('active', models.BooleanField()),
                ('number_of_yellowsold', models.SmallIntegerField()),
                ('props', bitfield.models.BitField((('active', 'active'),), db_index=True, default=1)),
            ],
            options={
                'verbose_name': 'Зоны контроля дисквалификаций',
                'db_table': 'competitions_disqualification_zones',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tournaments_view',
            fields=[
                ('old_id', models.BigIntegerField(blank=True, db_index=True, null=True, unique=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Идентификатор')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Дата мягкого удаления')),
                ('editing', models.BooleanField(default=True, verbose_name='Возможность редактирования')),
                ('deliting', models.BooleanField(default=True, verbose_name='Возможность удаления')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='Последнее обновление')),
                ('name', isc_common.fields.name_field.NameField(blank=True, null=True)),
                ('description', isc_common.fields.description_field.DescriptionField()),
                ('active', models.BooleanField()),
                ('code', isc_common.fields.code_field.CodeField(blank=True, null=True)),
                ('disqualification_condition', models.SmallIntegerField()),
                ('division_priority', models.SmallIntegerField()),
                ('division_round', models.SmallIntegerField(blank=True, null=True)),
                ('loss_points_rule', models.SmallIntegerField(blank=True, null=True)),
                ('number_of_players', models.SmallIntegerField()),
                ('number_of_rounds', models.SmallIntegerField()),
                ('number_of_teams', models.SmallIntegerField()),
                ('number_of_tours', models.SmallIntegerField()),
                ('priority', models.SmallIntegerField()),
                ('props', bitfield.models.BitField((('active', 'active'), ('national', 'national'), ('show_league', 'show_league'), ('show_region', 'show_region'), ('up_selected', 'up_selected'), ('up2_selected', 'up2_selected'), ('down_selected', 'down_selected'), ('down2_selected', 'down2_selected'), ('calendar_created', 'calendar_created'), ('show_numbers', 'show_numbers'), ('show_player_number', 'show_player_number'), ('show_stats', 'show_stats'), ('show_empty_cells', 'show_empty_cells')), db_index=True, default=1)),
                ('rating_rule', models.SmallIntegerField()),
                ('referees_max', models.SmallIntegerField()),
                ('round', models.SmallIntegerField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('technical_defeat', models.CharField(default='5:0', max_length=5)),
            ],
            options={
                'verbose_name': 'Турниры',
                'db_table': 'competitions_tournaments_view',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Disqualification_condition',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Идентификатор')),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Дата мягкого удаления')),
                ('editing', models.BooleanField(default=True, verbose_name='Возможность редактирования')),
                ('deliting', models.BooleanField(default=True, verbose_name='Возможность удаления')),
                ('lastmodified', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='Последнее обновление')),
                ('code', isc_common.fields.code_field.CodeStrictField(unique=True)),
                ('name', isc_common.fields.name_field.NameField(blank=True, null=True)),
                ('description', isc_common.fields.description_field.DescriptionField()),
            ],
            options={
                'verbose_name': 'Условие дисквалификаций',
            },
        ),
        migrations.AlterModelOptions(
            name='divisions',
            options={'verbose_name': 'Супертурниры'},
        ),
        migrations.AlterModelOptions(
            name='divisions_view',
            options={'managed': False, 'verbose_name': 'Супертурниры'},
        ),
    ]
