"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import anki.notes_pb2
import anki.notetypes_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ExtractAVTagsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TEXT_FIELD_NUMBER: builtins.int
    QUESTION_SIDE_FIELD_NUMBER: builtins.int
    text: typing.Text = ...
    question_side: builtins.bool = ...

    def __init__(self,
        *,
        text : typing.Text = ...,
        question_side : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"question_side",b"question_side",u"text",b"text"]) -> None: ...
global___ExtractAVTagsRequest = ExtractAVTagsRequest

class ExtractAVTagsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TEXT_FIELD_NUMBER: builtins.int
    AV_TAGS_FIELD_NUMBER: builtins.int
    text: typing.Text = ...

    @property
    def av_tags(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AVTag]: ...

    def __init__(self,
        *,
        text : typing.Text = ...,
        av_tags : typing.Optional[typing.Iterable[global___AVTag]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"av_tags",b"av_tags",u"text",b"text"]) -> None: ...
global___ExtractAVTagsResponse = ExtractAVTagsResponse

class AVTag(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SOUND_OR_VIDEO_FIELD_NUMBER: builtins.int
    TTS_FIELD_NUMBER: builtins.int
    sound_or_video: typing.Text = ...

    @property
    def tts(self) -> global___TTSTag: ...

    def __init__(self,
        *,
        sound_or_video : typing.Text = ...,
        tts : typing.Optional[global___TTSTag] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"sound_or_video",b"sound_or_video",u"tts",b"tts",u"value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"sound_or_video",b"sound_or_video",u"tts",b"tts",u"value",b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal[u"value",b"value"]) -> typing_extensions.Literal["sound_or_video","tts"]: ...
global___AVTag = AVTag

class TTSTag(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIELD_TEXT_FIELD_NUMBER: builtins.int
    LANG_FIELD_NUMBER: builtins.int
    VOICES_FIELD_NUMBER: builtins.int
    SPEED_FIELD_NUMBER: builtins.int
    OTHER_ARGS_FIELD_NUMBER: builtins.int
    field_text: typing.Text = ...
    lang: typing.Text = ...
    voices: google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text] = ...
    speed: builtins.float = ...
    other_args: google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text] = ...

    def __init__(self,
        *,
        field_text : typing.Text = ...,
        lang : typing.Text = ...,
        voices : typing.Optional[typing.Iterable[typing.Text]] = ...,
        speed : builtins.float = ...,
        other_args : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"field_text",b"field_text",u"lang",b"lang",u"other_args",b"other_args",u"speed",b"speed",u"voices",b"voices"]) -> None: ...
global___TTSTag = TTSTag

class ExtractLatexRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TEXT_FIELD_NUMBER: builtins.int
    SVG_FIELD_NUMBER: builtins.int
    EXPAND_CLOZES_FIELD_NUMBER: builtins.int
    text: typing.Text = ...
    svg: builtins.bool = ...
    expand_clozes: builtins.bool = ...

    def __init__(self,
        *,
        text : typing.Text = ...,
        svg : builtins.bool = ...,
        expand_clozes : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"expand_clozes",b"expand_clozes",u"svg",b"svg",u"text",b"text"]) -> None: ...
global___ExtractLatexRequest = ExtractLatexRequest

class ExtractLatexResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TEXT_FIELD_NUMBER: builtins.int
    LATEX_FIELD_NUMBER: builtins.int
    text: typing.Text = ...

    @property
    def latex(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ExtractedLatex]: ...

    def __init__(self,
        *,
        text : typing.Text = ...,
        latex : typing.Optional[typing.Iterable[global___ExtractedLatex]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"latex",b"latex",u"text",b"text"]) -> None: ...
global___ExtractLatexResponse = ExtractLatexResponse

class ExtractedLatex(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILENAME_FIELD_NUMBER: builtins.int
    LATEX_BODY_FIELD_NUMBER: builtins.int
    filename: typing.Text = ...
    latex_body: typing.Text = ...

    def __init__(self,
        *,
        filename : typing.Text = ...,
        latex_body : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"filename",b"filename",u"latex_body",b"latex_body"]) -> None: ...
global___ExtractedLatex = ExtractedLatex

class EmptyCardsReport(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class NoteWithEmptyCards(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        NOTE_ID_FIELD_NUMBER: builtins.int
        CARD_IDS_FIELD_NUMBER: builtins.int
        WILL_DELETE_NOTE_FIELD_NUMBER: builtins.int
        note_id: builtins.int = ...
        card_ids: google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int] = ...
        will_delete_note: builtins.bool = ...

        def __init__(self,
            *,
            note_id : builtins.int = ...,
            card_ids : typing.Optional[typing.Iterable[builtins.int]] = ...,
            will_delete_note : builtins.bool = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"card_ids",b"card_ids",u"note_id",b"note_id",u"will_delete_note",b"will_delete_note"]) -> None: ...

    REPORT_FIELD_NUMBER: builtins.int
    NOTES_FIELD_NUMBER: builtins.int
    report: typing.Text = ...

    @property
    def notes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___EmptyCardsReport.NoteWithEmptyCards]: ...

    def __init__(self,
        *,
        report : typing.Text = ...,
        notes : typing.Optional[typing.Iterable[global___EmptyCardsReport.NoteWithEmptyCards]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"notes",b"notes",u"report",b"report"]) -> None: ...
global___EmptyCardsReport = EmptyCardsReport

class RenderExistingCardRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CARD_ID_FIELD_NUMBER: builtins.int
    BROWSER_FIELD_NUMBER: builtins.int
    card_id: builtins.int = ...
    browser: builtins.bool = ...

    def __init__(self,
        *,
        card_id : builtins.int = ...,
        browser : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"browser",b"browser",u"card_id",b"card_id"]) -> None: ...
global___RenderExistingCardRequest = RenderExistingCardRequest

class RenderUncommittedCardRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NOTE_FIELD_NUMBER: builtins.int
    CARD_ORD_FIELD_NUMBER: builtins.int
    TEMPLATE_FIELD_NUMBER: builtins.int
    FILL_EMPTY_FIELD_NUMBER: builtins.int
    card_ord: builtins.int = ...
    fill_empty: builtins.bool = ...

    @property
    def note(self) -> anki.notes_pb2.Note: ...

    @property
    def template(self) -> anki.notetypes_pb2.Notetype.Template: ...

    def __init__(self,
        *,
        note : typing.Optional[anki.notes_pb2.Note] = ...,
        card_ord : builtins.int = ...,
        template : typing.Optional[anki.notetypes_pb2.Notetype.Template] = ...,
        fill_empty : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"note",b"note",u"template",b"template"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"card_ord",b"card_ord",u"fill_empty",b"fill_empty",u"note",b"note",u"template",b"template"]) -> None: ...
global___RenderUncommittedCardRequest = RenderUncommittedCardRequest

class RenderUncommittedCardLegacyRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NOTE_FIELD_NUMBER: builtins.int
    CARD_ORD_FIELD_NUMBER: builtins.int
    TEMPLATE_FIELD_NUMBER: builtins.int
    FILL_EMPTY_FIELD_NUMBER: builtins.int
    card_ord: builtins.int = ...
    template: builtins.bytes = ...
    fill_empty: builtins.bool = ...

    @property
    def note(self) -> anki.notes_pb2.Note: ...

    def __init__(self,
        *,
        note : typing.Optional[anki.notes_pb2.Note] = ...,
        card_ord : builtins.int = ...,
        template : builtins.bytes = ...,
        fill_empty : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"note",b"note"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"card_ord",b"card_ord",u"fill_empty",b"fill_empty",u"note",b"note",u"template",b"template"]) -> None: ...
global___RenderUncommittedCardLegacyRequest = RenderUncommittedCardLegacyRequest

class RenderCardResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    QUESTION_NODES_FIELD_NUMBER: builtins.int
    ANSWER_NODES_FIELD_NUMBER: builtins.int
    CSS_FIELD_NUMBER: builtins.int
    LATEX_SVG_FIELD_NUMBER: builtins.int
    css: typing.Text = ...
    latex_svg: builtins.bool = ...

    @property
    def question_nodes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RenderedTemplateNode]: ...

    @property
    def answer_nodes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RenderedTemplateNode]: ...

    def __init__(self,
        *,
        question_nodes : typing.Optional[typing.Iterable[global___RenderedTemplateNode]] = ...,
        answer_nodes : typing.Optional[typing.Iterable[global___RenderedTemplateNode]] = ...,
        css : typing.Text = ...,
        latex_svg : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"answer_nodes",b"answer_nodes",u"css",b"css",u"latex_svg",b"latex_svg",u"question_nodes",b"question_nodes"]) -> None: ...
global___RenderCardResponse = RenderCardResponse

class RenderedTemplateNode(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TEXT_FIELD_NUMBER: builtins.int
    REPLACEMENT_FIELD_NUMBER: builtins.int
    text: typing.Text = ...

    @property
    def replacement(self) -> global___RenderedTemplateReplacement: ...

    def __init__(self,
        *,
        text : typing.Text = ...,
        replacement : typing.Optional[global___RenderedTemplateReplacement] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"replacement",b"replacement",u"text",b"text",u"value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"replacement",b"replacement",u"text",b"text",u"value",b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal[u"value",b"value"]) -> typing_extensions.Literal["text","replacement"]: ...
global___RenderedTemplateNode = RenderedTemplateNode

class RenderedTemplateReplacement(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIELD_NAME_FIELD_NUMBER: builtins.int
    CURRENT_TEXT_FIELD_NUMBER: builtins.int
    FILTERS_FIELD_NUMBER: builtins.int
    field_name: typing.Text = ...
    current_text: typing.Text = ...
    filters: google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text] = ...

    def __init__(self,
        *,
        field_name : typing.Text = ...,
        current_text : typing.Text = ...,
        filters : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"current_text",b"current_text",u"field_name",b"field_name",u"filters",b"filters"]) -> None: ...
global___RenderedTemplateReplacement = RenderedTemplateReplacement

class RenderMarkdownRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MARKDOWN_FIELD_NUMBER: builtins.int
    SANITIZE_FIELD_NUMBER: builtins.int
    markdown: typing.Text = ...
    sanitize: builtins.bool = ...

    def __init__(self,
        *,
        markdown : typing.Text = ...,
        sanitize : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"markdown",b"markdown",u"sanitize",b"sanitize"]) -> None: ...
global___RenderMarkdownRequest = RenderMarkdownRequest
