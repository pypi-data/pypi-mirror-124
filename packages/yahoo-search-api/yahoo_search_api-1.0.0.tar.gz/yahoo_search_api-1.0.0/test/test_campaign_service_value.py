# coding: utf-8

"""
    Yahoo!広告 検索広告 API リファレンス / Yahoo! JAPAN Ads Search Ads API Reference

    <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/design/v6/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v6
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import yahoo_search_api
from yahoo_search_api.models.campaign_service_value import CampaignServiceValue  # noqa: E501
from yahoo_search_api.rest import ApiException

class TestCampaignServiceValue(unittest.TestCase):
    """CampaignServiceValue unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CampaignServiceValue
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = yahoo_search_api.models.campaign_service_value.CampaignServiceValue()  # noqa: E501
        if include_optional :
            return CampaignServiceValue(
                campaign = yahoo_search_api.models.campaign.Campaign(
                    account_id = 56, 
                    app_id = '0', 
                    app_store = 'IOS', 
                    bidding_strategy_configuration = yahoo_search_api.models.campaign_service_bidding_strategy.CampaignServiceBiddingStrategy(
                        bidding_scheme = yahoo_search_api.models.campaign_service_bidding_scheme.CampaignServiceBiddingScheme(
                            bidding_strategy_type = 'MANUAL_CPC', 
                            manual_cpc_bidding_scheme = yahoo_search_api.models.campaign_service_manual_cpc_bidding_scheme.CampaignServiceManualCpcBiddingScheme(
                                enhanced_cpc_enabled = 'TRUE', ), 
                            target_cpa_bidding_scheme = yahoo_search_api.models.campaign_service_target_cpa_bidding_scheme.CampaignServiceTargetCpaBiddingScheme(
                                bid_ceiling = 56, 
                                bid_floor = 56, 
                                target_cpa = 56, ), 
                            target_roas_bidding_scheme = yahoo_search_api.models.campaign_service_target_roas_bidding_scheme.CampaignServiceTargetRoasBiddingScheme(
                                bid_ceiling = 56, 
                                bid_floor = 56, 
                                target_roas = 1.337, ), 
                            target_spend_bidding_scheme = yahoo_search_api.models.campaign_service_target_spend_bidding_scheme.CampaignServiceTargetSpendBiddingScheme(
                                bid_ceiling = 56, ), 
                            target_impression_share_scheme = yahoo_search_api.models.campaign_service_target_impression_share_scheme.CampaignServiceTargetImpressionShareScheme(
                                location = 'ANYWHERE_ON_PAGE', 
                                bid_ceiling = 56, 
                                target_impression_share = 56, ), 
                            maximize_conversions_bidding_scheme = yahoo_search_api.models.campaign_service_maximize_conversions_bidding_scheme.CampaignServiceMaximizeConversionsBiddingScheme(
                                target_cpa = 56, ), 
                            maximize_conversion_value_bidding_scheme = yahoo_search_api.models.campaign_service_maximize_conversion_value_bidding_scheme.CampaignServiceMaximizeConversionValueBiddingScheme(
                                target_roas = 1.337, ), ), 
                        bidding_strategy_id = 56, 
                        bidding_strategy_name = '0', 
                        bidding_strategy_source = 'CAMPAIGN', ), 
                    bidding_strategy_failed_reason = 'FAILURE', 
                    budget = yahoo_search_api.models.campaign_service_budget.CampaignServiceBudget(
                        amount = 56, 
                        budget_period = 'DAILY', ), 
                    campaign_id = 56, 
                    campaign_name = '0', 
                    campaign_track_id = 56, 
                    conversion_optimizer_eligibility = 'ENABLE', 
                    custom_parameters = yahoo_search_api.models.campaign_service_custom_parameters.CampaignServiceCustomParameters(
                        is_remove = 'TRUE', 
                        parameters = [
                            yahoo_search_api.models.campaign_service_custom_parameter.CampaignServiceCustomParameter(
                                key = '0', 
                                value = '0', )
                            ], ), 
                    end_date = '0', 
                    failed_bidding_strategy_configuration = yahoo_search_api.models.campaign_service_bidding_strategy.CampaignServiceBiddingStrategy(
                        bidding_strategy_id = 56, 
                        bidding_strategy_name = '0', ), 
                    labels = [
                        yahoo_search_api.models.campaign_service_label.CampaignServiceLabel(
                            color = '0', 
                            description = '0', 
                            label_id = 56, 
                            label_name = '0', )
                        ], 
                    serving_status = 'SERVING', 
                    settings = [
                        yahoo_search_api.models.campaign_service_settings.CampaignServiceSettings(
                            dynamic_ads_for_search_setting = yahoo_search_api.models.campaign_service_dynamic_ads_for_search_setting.CampaignServiceDynamicAdsForSearchSetting(
                                feed_ids = [
                                    56
                                    ], 
                                domain = '0', 
                                das_use_urls_type = 'USE_SUPPLIED_URLS_ONLY', ), 
                            geo_target_type_setting = yahoo_search_api.models.campaign_service_geo_target_type_setting.CampaignServiceGeoTargetTypeSetting(
                                negative_geo_target_type = 'DONT_CARE', 
                                positive_geo_target_type = 'DONT_CARE', ), 
                            setting_type = 'GEO_TARGET_TYPE_SETTING', 
                            targeting_setting = yahoo_search_api.models.campaign_service_targeting_setting.CampaignServiceTargetingSetting(
                                target_all = 'ACTIVE', ), )
                        ], 
                    start_date = '0', 
                    tracking_url = '0', 
                    type = 'STANDARD', 
                    url_review_data = yahoo_search_api.models.campaign_service_url_review_data.CampaignServiceUrlReviewData(
                        disapproval_reason_codes = [
                            '0'
                            ], 
                        disapproval_review_url = yahoo_search_api.models.campaign_service_review_url.CampaignServiceReviewUrl(
                            tracking_url = '0', ), 
                        in_review_url = yahoo_search_api.models.campaign_service_review_url.CampaignServiceReviewUrl(
                            tracking_url = '0', ), 
                        url_approval_status = 'NONE', ), 
                    user_status = 'ACTIVE', 
                    created_date = '0', ), 
                errors = [
                    yahoo_search_api.models.error.Error(
                        code = '0', 
                        message = '0', 
                        details = [
                            yahoo_search_api.models.error_detail.ErrorDetail(
                                request_key = '0', 
                                request_value = '0', )
                            ], )
                    ], 
                operation_succeeded = True
            )
        else :
            return CampaignServiceValue(
        )

    def testCampaignServiceValue(self):
        """Test CampaignServiceValue"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
