# coding: utf-8

"""
    Yahoo!広告 検索広告 API リファレンス / Yahoo! JAPAN Ads Search Ads API Reference

    <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/design/v6/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v6
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import yahoo_search_api
from yahoo_search_api.models.campaign_service_bidding_scheme import CampaignServiceBiddingScheme  # noqa: E501
from yahoo_search_api.rest import ApiException

class TestCampaignServiceBiddingScheme(unittest.TestCase):
    """CampaignServiceBiddingScheme unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CampaignServiceBiddingScheme
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = yahoo_search_api.models.campaign_service_bidding_scheme.CampaignServiceBiddingScheme()  # noqa: E501
        if include_optional :
            return CampaignServiceBiddingScheme(
                bidding_strategy_type = 'MANUAL_CPC', 
                manual_cpc_bidding_scheme = yahoo_search_api.models.campaign_service_manual_cpc_bidding_scheme.CampaignServiceManualCpcBiddingScheme(
                    enhanced_cpc_enabled = 'TRUE', ), 
                target_cpa_bidding_scheme = yahoo_search_api.models.campaign_service_target_cpa_bidding_scheme.CampaignServiceTargetCpaBiddingScheme(
                    bid_ceiling = 56, 
                    bid_floor = 56, 
                    target_cpa = 56, ), 
                target_roas_bidding_scheme = yahoo_search_api.models.campaign_service_target_roas_bidding_scheme.CampaignServiceTargetRoasBiddingScheme(
                    bid_ceiling = 56, 
                    bid_floor = 56, 
                    target_roas = 1.337, ), 
                target_spend_bidding_scheme = yahoo_search_api.models.campaign_service_target_spend_bidding_scheme.CampaignServiceTargetSpendBiddingScheme(
                    bid_ceiling = 56, ), 
                target_impression_share_scheme = yahoo_search_api.models.campaign_service_target_impression_share_scheme.CampaignServiceTargetImpressionShareScheme(
                    location = 'ANYWHERE_ON_PAGE', 
                    bid_ceiling = 56, 
                    target_impression_share = 56, ), 
                maximize_conversions_bidding_scheme = yahoo_search_api.models.campaign_service_maximize_conversions_bidding_scheme.CampaignServiceMaximizeConversionsBiddingScheme(
                    target_cpa = 56, ), 
                maximize_conversion_value_bidding_scheme = yahoo_search_api.models.campaign_service_maximize_conversion_value_bidding_scheme.CampaignServiceMaximizeConversionValueBiddingScheme(
                    target_roas = 1.337, )
            )
        else :
            return CampaignServiceBiddingScheme(
        )

    def testCampaignServiceBiddingScheme(self):
        """Test CampaignServiceBiddingScheme"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
