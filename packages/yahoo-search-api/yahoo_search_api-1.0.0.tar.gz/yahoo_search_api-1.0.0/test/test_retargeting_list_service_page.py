# coding: utf-8

"""
    Yahoo!広告 検索広告 API リファレンス / Yahoo! JAPAN Ads Search Ads API Reference

    <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/design/v6/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v6
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import yahoo_search_api
from yahoo_search_api.models.retargeting_list_service_page import RetargetingListServicePage  # noqa: E501
from yahoo_search_api.rest import ApiException

class TestRetargetingListServicePage(unittest.TestCase):
    """RetargetingListServicePage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test RetargetingListServicePage
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = yahoo_search_api.models.retargeting_list_service_page.RetargetingListServicePage()  # noqa: E501
        if include_optional :
            return RetargetingListServicePage(
                total_num_entries = 56, 
                values = [
                    yahoo_search_api.models.retargeting_list_service_value.RetargetingListServiceValue(
                        errors = [
                            yahoo_search_api.models.error.Error(
                                code = '0', 
                                message = '0', 
                                details = [
                                    yahoo_search_api.models.error_detail.ErrorDetail(
                                        request_key = '0', 
                                        request_value = '0', )
                                    ], )
                            ], 
                        operation_succeeded = True, 
                        target_list = yahoo_search_api.models.retargeting_list_service_targeting_list.RetargetingListServiceTargetingList(
                            account_id = 56, 
                            closing_reason = 'UNUSED_LIST', 
                            default_target_list = yahoo_search_api.models.retargeting_list_service_default_target_list.RetargetingListServiceDefaultTargetList(
                                tag = yahoo_search_api.models.retargeting_list_service_tag.RetargetingListServiceTag(
                                    snippet = '0', 
                                    advanced_snippet = '0', ), ), 
                            logical_target_list = yahoo_search_api.models.retargeting_list_service_logical_target_list.RetargetingListServiceLogicalTargetList(
                                logical_group = [
                                    yahoo_search_api.models.retargeting_list_service_logical_group.RetargetingListServiceLogicalGroup(
                                        logical_condition = 'AND', 
                                        logical_operand = [
                                            yahoo_search_api.models.retargeting_list_service_logical_rule_operand.RetargetingListServiceLogicalRuleOperand(
                                                target_list_id = 56, )
                                            ], )
                                    ], ), 
                            reach = 56, 
                            reach_storage_span = 56, 
                            reach_storage_status = 'OPEN', 
                            retargeting_account_status = yahoo_search_api.models.retargeting_list_service_retargeting_account_status.RetargetingListServiceRetargetingAccountStatus(
                                agree_date = '0', 
                                review_request_date = '0', 
                                review_status = 'APPROVED', ), 
                            rule_base_target_list = yahoo_search_api.models.retargeting_list_service_rule_base_target_list.RetargetingListServiceRuleBaseTargetList(
                                end_date = '0', 
                                is_all_visitor_rule = 'TRUE', 
                                is_date_specific_rule = 'TRUE', 
                                rules = [
                                    yahoo_search_api.models.retargeting_list_service_rule_group.RetargetingListServiceRuleGroup(
                                        rule_items = [
                                            yahoo_search_api.models.retargeting_list_service_rule_item.RetargetingListServiceRuleItem(
                                                custom_key_rule_item = yahoo_search_api.models.retargeting_list_service_custom_key_rule_item.RetargetingListServiceCustomKeyRuleItem(
                                                    text_key = '0', ), 
                                                rule_operator = 'UNKNOWN', 
                                                rule_type = 'URL_RULE', 
                                                url_rule_item = yahoo_search_api.models.retargeting_list_service_url_rule_item.RetargetingListServiceUrlRuleItem(
                                                    url_rule_key = 'URL', ), 
                                                value = '0', )
                                            ], )
                                    ], 
                                start_date = '0', ), 
                            target_list_description = '0', 
                            target_list_id = 56, 
                            target_list_name = '0', 
                            target_list_owner = 'OWNER', 
                            target_list_track_id = 56, 
                            target_list_type = 'DEFAULT', ), )
                    ]
            )
        else :
            return RetargetingListServicePage(
        )

    def testRetargetingListServicePage(self):
        """Test RetargetingListServicePage"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
