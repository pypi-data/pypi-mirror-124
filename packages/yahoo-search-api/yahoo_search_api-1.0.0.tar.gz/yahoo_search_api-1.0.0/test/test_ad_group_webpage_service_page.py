# coding: utf-8

"""
    Yahoo!広告 検索広告 API リファレンス / Yahoo! JAPAN Ads Search Ads API Reference

    <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/design/v6/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v6
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import yahoo_search_api
from yahoo_search_api.models.ad_group_webpage_service_page import AdGroupWebpageServicePage  # noqa: E501
from yahoo_search_api.rest import ApiException

class TestAdGroupWebpageServicePage(unittest.TestCase):
    """AdGroupWebpageServicePage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AdGroupWebpageServicePage
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = yahoo_search_api.models.ad_group_webpage_service_page.AdGroupWebpageServicePage()  # noqa: E501
        if include_optional :
            return AdGroupWebpageServicePage(
                total_num_entries = 56, 
                values = [
                    yahoo_search_api.models.ad_group_webpage_service_value.AdGroupWebpageServiceValue(
                        ad_group_webpage = yahoo_search_api.models.ad_group_webpage.AdGroupWebpage(
                            account_id = 56, 
                            ad_group_id = 56, 
                            ad_group_track_id = 56, 
                            bid = yahoo_search_api.models.ad_group_webpage_service_bid.AdGroupWebpageServiceBid(
                                ad_group_max_cpc = 56, 
                                bid_source = 'ADGROUP', 
                                keyword_max_cpc = 56, 
                                max_cpc = 56, ), 
                            campaign_id = 56, 
                            campaign_track_id = 56, 
                            excluded_type = 'INCLUDED', 
                            user_status = 'ACTIVE', 
                            webpage = yahoo_search_api.models.ad_group_webpage_service_webpage.AdGroupWebpageServiceWebpage(
                                parameter = yahoo_search_api.models.ad_group_webpage_service_webpage_parameter.AdGroupWebpageServiceWebpageParameter(
                                    conditions = [
                                        yahoo_search_api.models.ad_group_webpage_service_webpage_condition.AdGroupWebpageServiceWebpageCondition(
                                            argument = '0', 
                                            webpage_condition_type = 'URL', 
                                            operator = 'CONTAINS', )
                                        ], ), 
                                target_id = 56, 
                                target_track_id = 56, ), ), 
                        errors = [
                            yahoo_search_api.models.error.Error(
                                code = '0', 
                                message = '0', 
                                details = [
                                    yahoo_search_api.models.error_detail.ErrorDetail(
                                        request_key = '0', 
                                        request_value = '0', )
                                    ], )
                            ], 
                        operation_succeeded = True, )
                    ]
            )
        else :
            return AdGroupWebpageServicePage(
        )

    def testAdGroupWebpageServicePage(self):
        """Test AdGroupWebpageServicePage"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
