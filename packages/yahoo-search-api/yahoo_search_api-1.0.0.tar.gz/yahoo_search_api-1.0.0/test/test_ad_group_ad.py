# coding: utf-8

"""
    Yahoo!広告 検索広告 API リファレンス / Yahoo! JAPAN Ads Search Ads API Reference

    <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/design/v6/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v6
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import yahoo_search_api
from yahoo_search_api.models.ad_group_ad import AdGroupAd  # noqa: E501
from yahoo_search_api.rest import ApiException

class TestAdGroupAd(unittest.TestCase):
    """AdGroupAd unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AdGroupAd
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = yahoo_search_api.models.ad_group_ad.AdGroupAd()  # noqa: E501
        if include_optional :
            return AdGroupAd(
                account_id = 56, 
                ad = yahoo_search_api.models.ad_group_ad_service_ad.AdGroupAdServiceAd(
                    ad_type = 'TEXT_AD2', 
                    additional_advanced_mobile_urls = [
                        yahoo_search_api.models.ad_group_ad_service_additional_advanced_mobile_urls.AdGroupAdServiceAdditionalAdvancedMobileUrls(
                            advanced_mobile_url = '0', 
                            disapproval_reason_codes = [
                                '0'
                                ], )
                        ], 
                    additional_advanced_urls = [
                        yahoo_search_api.models.ad_group_ad_service_additional_advanced_urls.AdGroupAdServiceAdditionalAdvancedUrls(
                            advanced_url = '0', )
                        ], 
                    advanced_mobile_url = '0', 
                    advanced_url = '0', 
                    app_ad = yahoo_search_api.models.ad_group_ad_service_app_ad.AdGroupAdServiceAppAd(
                        app_id = '0', 
                        app_store = 'IOS', 
                        description2 = '0', ), 
                    custom_parameters = yahoo_search_api.models.ad_group_ad_service_custom_parameters.AdGroupAdServiceCustomParameters(
                        is_remove = 'TRUE', 
                        parameters = [
                            yahoo_search_api.models.ad_group_ad_service_custom_parameter.AdGroupAdServiceCustomParameter(
                                key = '0', 
                                value = '0', )
                            ], ), 
                    description1 = '0', 
                    device_preference = 'SMART_PHONE', 
                    display_url = '0', 
                    extended_text_ad = yahoo_search_api.models.ad_group_ad_service_extended_text_ad.AdGroupAdServiceExtendedTextAd(
                        headline2 = '0', 
                        headline3 = '0', 
                        description2 = '0', 
                        path1 = '0', 
                        path2 = '0', ), 
                    responsive_search_ad = yahoo_search_api.models.ad_group_ad_service_responsive_search_ad.AdGroupAdServiceResponsiveSearchAd(
                        headlines = [
                            yahoo_search_api.models.ad_group_ad_service_headline_text_asset.AdGroupAdServiceHeadlineTextAsset(
                                text = '0', 
                                pinned_field = 'UNSPECIFIED', 
                                approval_status = 'APPROVED', )
                            ], 
                        descriptions = [
                            yahoo_search_api.models.ad_group_ad_service_description_text_asset.AdGroupAdServiceDescriptionTextAsset(
                                text = '0', )
                            ], 
                        path1 = '0', 
                        path2 = '0', ), 
                    headline1 = '0', 
                    text_ad2 = yahoo_search_api.models.ad_group_ad_service_text_ad2.AdGroupAdServiceTextAd2(
                        description2 = '0', ), 
                    dynamic_search_linked_ad = yahoo_search_api.models.ad_group_ad_service_dynamic_search_linked_ad.AdGroupAdServiceDynamicSearchLinkedAd(
                        description2 = '0', ), 
                    tracking_url = '0', 
                    url = '0', ), 
                ad_group_id = 56, 
                ad_group_name = '0', 
                ad_group_track_id = 56, 
                ad_id = 56, 
                ad_name = '0', 
                ad_track_id = 56, 
                approval_status = 'APPROVED', 
                campaign_id = 56, 
                campaign_name = '0', 
                campaign_track_id = 56, 
                disapproval_reason_codes = [
                    '0'
                    ], 
                feed_id = 56, 
                invalided_trademarks = [
                    '0'
                    ], 
                labels = [
                    yahoo_search_api.models.ad_group_ad_service_label.AdGroupAdServiceLabel(
                        color = '0', 
                        description = '0', 
                        label_id = 56, 
                        label_name = '0', )
                    ], 
                trademark_status = 'NO_RESTRICTION', 
                user_status = 'ACTIVE', 
                created_date = '0'
            )
        else :
            return AdGroupAd(
        )

    def testAdGroupAd(self):
        """Test AdGroupAd"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
