# coding: utf-8

"""
    Yahoo!広告 検索広告 API リファレンス / Yahoo! JAPAN Ads Search Ads API Reference

    <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/design/v6/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v6
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import yahoo_search_api
from yahoo_search_api.models.keyword_forecast_metrics_service_get_response import KeywordForecastMetricsServiceGetResponse  # noqa: E501
from yahoo_search_api.rest import ApiException

class TestKeywordForecastMetricsServiceGetResponse(unittest.TestCase):
    """KeywordForecastMetricsServiceGetResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test KeywordForecastMetricsServiceGetResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = yahoo_search_api.models.keyword_forecast_metrics_service_get_response.KeywordForecastMetricsServiceGetResponse()  # noqa: E501
        if include_optional :
            return KeywordForecastMetricsServiceGetResponse(
                errors = [
                    yahoo_search_api.models.error.Error(
                        code = '0', 
                        message = '0', 
                        details = [
                            yahoo_search_api.models.error_detail.ErrorDetail(
                                request_key = '0', 
                                request_value = '0', )
                            ], )
                    ], 
                rid = '0', 
                rval = yahoo_search_api.models.keyword_forecast_metrics_service_page.KeywordForecastMetricsServicePage(
                    total_num_entries = 56, 
                    values = [
                        yahoo_search_api.models.keyword_forecast_metrics_service_value.KeywordForecastMetricsServiceValue(
                            keyword_forecast_metrics = yahoo_search_api.models.keyword_forecast_metrics.KeywordForecastMetrics(
                                keyword = '0', 
                                impressions = 1.337, 
                                ctr = 1.337, 
                                average_cpc = 1.337, 
                                clicks = 1.337, 
                                cost = 1.337, ), 
                            errors = [
                                yahoo_search_api.models.error.Error(
                                    code = '0', 
                                    message = '0', 
                                    details = [
                                        yahoo_search_api.models.error_detail.ErrorDetail(
                                            request_key = '0', 
                                            request_value = '0', )
                                        ], )
                                ], 
                            operation_succeeded = True, )
                        ], )
            )
        else :
            return KeywordForecastMetricsServiceGetResponse(
        )

    def testKeywordForecastMetricsServiceGetResponse(self):
        """Test KeywordForecastMetricsServiceGetResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
