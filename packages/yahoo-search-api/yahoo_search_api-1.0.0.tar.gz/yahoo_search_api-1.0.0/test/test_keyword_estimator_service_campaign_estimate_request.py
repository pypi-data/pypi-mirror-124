# coding: utf-8

"""
    Yahoo!広告 検索広告 API リファレンス / Yahoo! JAPAN Ads Search Ads API Reference

    <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/design/v6/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v6
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import yahoo_search_api
from yahoo_search_api.models.keyword_estimator_service_campaign_estimate_request import KeywordEstimatorServiceCampaignEstimateRequest  # noqa: E501
from yahoo_search_api.rest import ApiException

class TestKeywordEstimatorServiceCampaignEstimateRequest(unittest.TestCase):
    """KeywordEstimatorServiceCampaignEstimateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test KeywordEstimatorServiceCampaignEstimateRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = yahoo_search_api.models.keyword_estimator_service_campaign_estimate_request.KeywordEstimatorServiceCampaignEstimateRequest()  # noqa: E501
        if include_optional :
            return KeywordEstimatorServiceCampaignEstimateRequest(
                ad_group_estimate_requests = [
                    yahoo_search_api.models.keyword_estimator_service_ad_group_estimate_request.KeywordEstimatorServiceAdGroupEstimateRequest(
                        ad_group_id = 56, 
                        keyword_estimate_requests = [
                            yahoo_search_api.models.keyword_estimator_service_keyword_estimate_request.KeywordEstimatorServiceKeywordEstimateRequest(
                                estimate_keyword = yahoo_search_api.models.keyword_estimator_service_estimate_keyword.KeywordEstimatorServiceEstimateKeyword(
                                    keyword_match_type = 'EXACT', 
                                    text = '0', ), 
                                is_negative_bool = 'TRUE', 
                                max_cpc = 56, )
                            ], 
                        max_cpc = 56, )
                    ], 
                campaign_id = 56, 
                daily_budget = 56, 
                provinces = [
                    '0'
                    ]
            )
        else :
            return KeywordEstimatorServiceCampaignEstimateRequest(
                ad_group_estimate_requests = [
                    yahoo_search_api.models.keyword_estimator_service_ad_group_estimate_request.KeywordEstimatorServiceAdGroupEstimateRequest(
                        ad_group_id = 56, 
                        keyword_estimate_requests = [
                            yahoo_search_api.models.keyword_estimator_service_keyword_estimate_request.KeywordEstimatorServiceKeywordEstimateRequest(
                                estimate_keyword = yahoo_search_api.models.keyword_estimator_service_estimate_keyword.KeywordEstimatorServiceEstimateKeyword(
                                    keyword_match_type = 'EXACT', 
                                    text = '0', ), 
                                is_negative_bool = 'TRUE', 
                                max_cpc = 56, )
                            ], 
                        max_cpc = 56, )
                    ],
        )

    def testKeywordEstimatorServiceCampaignEstimateRequest(self):
        """Test KeywordEstimatorServiceCampaignEstimateRequest"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
