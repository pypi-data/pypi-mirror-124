# coding: utf-8

"""
    Yahoo!広告 検索広告 API リファレンス / Yahoo! JAPAN Ads Search Ads API Reference

    <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/design/v6/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-search-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v6
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_search_api.configuration import Configuration


class CampaignServiceBiddingScheme(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'bidding_strategy_type': 'CampaignServiceBiddingStrategyType',
        'manual_cpc_bidding_scheme': 'CampaignServiceManualCpcBiddingScheme',
        'target_cpa_bidding_scheme': 'CampaignServiceTargetCpaBiddingScheme',
        'target_roas_bidding_scheme': 'CampaignServiceTargetRoasBiddingScheme',
        'target_spend_bidding_scheme': 'CampaignServiceTargetSpendBiddingScheme',
        'target_impression_share_scheme': 'CampaignServiceTargetImpressionShareScheme',
        'maximize_conversions_bidding_scheme': 'CampaignServiceMaximizeConversionsBiddingScheme',
        'maximize_conversion_value_bidding_scheme': 'CampaignServiceMaximizeConversionValueBiddingScheme'
    }

    attribute_map = {
        'bidding_strategy_type': 'biddingStrategyType',
        'manual_cpc_bidding_scheme': 'manualCpcBiddingScheme',
        'target_cpa_bidding_scheme': 'targetCpaBiddingScheme',
        'target_roas_bidding_scheme': 'targetRoasBiddingScheme',
        'target_spend_bidding_scheme': 'targetSpendBiddingScheme',
        'target_impression_share_scheme': 'targetImpressionShareScheme',
        'maximize_conversions_bidding_scheme': 'maximizeConversionsBiddingScheme',
        'maximize_conversion_value_bidding_scheme': 'maximizeConversionValueBiddingScheme'
    }

    def __init__(self, bidding_strategy_type=None, manual_cpc_bidding_scheme=None, target_cpa_bidding_scheme=None, target_roas_bidding_scheme=None, target_spend_bidding_scheme=None, target_impression_share_scheme=None, maximize_conversions_bidding_scheme=None, maximize_conversion_value_bidding_scheme=None, local_vars_configuration=None):  # noqa: E501
        """CampaignServiceBiddingScheme - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._bidding_strategy_type = None
        self._manual_cpc_bidding_scheme = None
        self._target_cpa_bidding_scheme = None
        self._target_roas_bidding_scheme = None
        self._target_spend_bidding_scheme = None
        self._target_impression_share_scheme = None
        self._maximize_conversions_bidding_scheme = None
        self._maximize_conversion_value_bidding_scheme = None
        self.discriminator = None

        self.bidding_strategy_type = bidding_strategy_type
        self.manual_cpc_bidding_scheme = manual_cpc_bidding_scheme
        self.target_cpa_bidding_scheme = target_cpa_bidding_scheme
        self.target_roas_bidding_scheme = target_roas_bidding_scheme
        self.target_spend_bidding_scheme = target_spend_bidding_scheme
        self.target_impression_share_scheme = target_impression_share_scheme
        self.maximize_conversions_bidding_scheme = maximize_conversions_bidding_scheme
        self.maximize_conversion_value_bidding_scheme = maximize_conversion_value_bidding_scheme

    @property
    def bidding_strategy_type(self):
        """Gets the bidding_strategy_type of this CampaignServiceBiddingScheme.  # noqa: E501


        :return: The bidding_strategy_type of this CampaignServiceBiddingScheme.  # noqa: E501
        :rtype: CampaignServiceBiddingStrategyType
        """
        return self._bidding_strategy_type

    @bidding_strategy_type.setter
    def bidding_strategy_type(self, bidding_strategy_type):
        """Sets the bidding_strategy_type of this CampaignServiceBiddingScheme.


        :param bidding_strategy_type: The bidding_strategy_type of this CampaignServiceBiddingScheme.  # noqa: E501
        :type: CampaignServiceBiddingStrategyType
        """

        self._bidding_strategy_type = bidding_strategy_type

    @property
    def manual_cpc_bidding_scheme(self):
        """Gets the manual_cpc_bidding_scheme of this CampaignServiceBiddingScheme.  # noqa: E501


        :return: The manual_cpc_bidding_scheme of this CampaignServiceBiddingScheme.  # noqa: E501
        :rtype: CampaignServiceManualCpcBiddingScheme
        """
        return self._manual_cpc_bidding_scheme

    @manual_cpc_bidding_scheme.setter
    def manual_cpc_bidding_scheme(self, manual_cpc_bidding_scheme):
        """Sets the manual_cpc_bidding_scheme of this CampaignServiceBiddingScheme.


        :param manual_cpc_bidding_scheme: The manual_cpc_bidding_scheme of this CampaignServiceBiddingScheme.  # noqa: E501
        :type: CampaignServiceManualCpcBiddingScheme
        """

        self._manual_cpc_bidding_scheme = manual_cpc_bidding_scheme

    @property
    def target_cpa_bidding_scheme(self):
        """Gets the target_cpa_bidding_scheme of this CampaignServiceBiddingScheme.  # noqa: E501


        :return: The target_cpa_bidding_scheme of this CampaignServiceBiddingScheme.  # noqa: E501
        :rtype: CampaignServiceTargetCpaBiddingScheme
        """
        return self._target_cpa_bidding_scheme

    @target_cpa_bidding_scheme.setter
    def target_cpa_bidding_scheme(self, target_cpa_bidding_scheme):
        """Sets the target_cpa_bidding_scheme of this CampaignServiceBiddingScheme.


        :param target_cpa_bidding_scheme: The target_cpa_bidding_scheme of this CampaignServiceBiddingScheme.  # noqa: E501
        :type: CampaignServiceTargetCpaBiddingScheme
        """

        self._target_cpa_bidding_scheme = target_cpa_bidding_scheme

    @property
    def target_roas_bidding_scheme(self):
        """Gets the target_roas_bidding_scheme of this CampaignServiceBiddingScheme.  # noqa: E501


        :return: The target_roas_bidding_scheme of this CampaignServiceBiddingScheme.  # noqa: E501
        :rtype: CampaignServiceTargetRoasBiddingScheme
        """
        return self._target_roas_bidding_scheme

    @target_roas_bidding_scheme.setter
    def target_roas_bidding_scheme(self, target_roas_bidding_scheme):
        """Sets the target_roas_bidding_scheme of this CampaignServiceBiddingScheme.


        :param target_roas_bidding_scheme: The target_roas_bidding_scheme of this CampaignServiceBiddingScheme.  # noqa: E501
        :type: CampaignServiceTargetRoasBiddingScheme
        """

        self._target_roas_bidding_scheme = target_roas_bidding_scheme

    @property
    def target_spend_bidding_scheme(self):
        """Gets the target_spend_bidding_scheme of this CampaignServiceBiddingScheme.  # noqa: E501


        :return: The target_spend_bidding_scheme of this CampaignServiceBiddingScheme.  # noqa: E501
        :rtype: CampaignServiceTargetSpendBiddingScheme
        """
        return self._target_spend_bidding_scheme

    @target_spend_bidding_scheme.setter
    def target_spend_bidding_scheme(self, target_spend_bidding_scheme):
        """Sets the target_spend_bidding_scheme of this CampaignServiceBiddingScheme.


        :param target_spend_bidding_scheme: The target_spend_bidding_scheme of this CampaignServiceBiddingScheme.  # noqa: E501
        :type: CampaignServiceTargetSpendBiddingScheme
        """

        self._target_spend_bidding_scheme = target_spend_bidding_scheme

    @property
    def target_impression_share_scheme(self):
        """Gets the target_impression_share_scheme of this CampaignServiceBiddingScheme.  # noqa: E501


        :return: The target_impression_share_scheme of this CampaignServiceBiddingScheme.  # noqa: E501
        :rtype: CampaignServiceTargetImpressionShareScheme
        """
        return self._target_impression_share_scheme

    @target_impression_share_scheme.setter
    def target_impression_share_scheme(self, target_impression_share_scheme):
        """Sets the target_impression_share_scheme of this CampaignServiceBiddingScheme.


        :param target_impression_share_scheme: The target_impression_share_scheme of this CampaignServiceBiddingScheme.  # noqa: E501
        :type: CampaignServiceTargetImpressionShareScheme
        """

        self._target_impression_share_scheme = target_impression_share_scheme

    @property
    def maximize_conversions_bidding_scheme(self):
        """Gets the maximize_conversions_bidding_scheme of this CampaignServiceBiddingScheme.  # noqa: E501


        :return: The maximize_conversions_bidding_scheme of this CampaignServiceBiddingScheme.  # noqa: E501
        :rtype: CampaignServiceMaximizeConversionsBiddingScheme
        """
        return self._maximize_conversions_bidding_scheme

    @maximize_conversions_bidding_scheme.setter
    def maximize_conversions_bidding_scheme(self, maximize_conversions_bidding_scheme):
        """Sets the maximize_conversions_bidding_scheme of this CampaignServiceBiddingScheme.


        :param maximize_conversions_bidding_scheme: The maximize_conversions_bidding_scheme of this CampaignServiceBiddingScheme.  # noqa: E501
        :type: CampaignServiceMaximizeConversionsBiddingScheme
        """

        self._maximize_conversions_bidding_scheme = maximize_conversions_bidding_scheme

    @property
    def maximize_conversion_value_bidding_scheme(self):
        """Gets the maximize_conversion_value_bidding_scheme of this CampaignServiceBiddingScheme.  # noqa: E501


        :return: The maximize_conversion_value_bidding_scheme of this CampaignServiceBiddingScheme.  # noqa: E501
        :rtype: CampaignServiceMaximizeConversionValueBiddingScheme
        """
        return self._maximize_conversion_value_bidding_scheme

    @maximize_conversion_value_bidding_scheme.setter
    def maximize_conversion_value_bidding_scheme(self, maximize_conversion_value_bidding_scheme):
        """Sets the maximize_conversion_value_bidding_scheme of this CampaignServiceBiddingScheme.


        :param maximize_conversion_value_bidding_scheme: The maximize_conversion_value_bidding_scheme of this CampaignServiceBiddingScheme.  # noqa: E501
        :type: CampaignServiceMaximizeConversionValueBiddingScheme
        """

        self._maximize_conversion_value_bidding_scheme = maximize_conversion_value_bidding_scheme

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CampaignServiceBiddingScheme):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, CampaignServiceBiddingScheme):
            return True

        return self.to_dict() != other.to_dict()
