# coding: utf-8

"""
    Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! JAPAN Ads Display Ads API Reference

    <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/design/v6/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v6
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_display_api.configuration import Configuration


class GuaranteedAdGroupAdServiceCarousel(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'display_order': 'int',
        'media_id': 'int',
        'headline': 'str',
        'description': 'str',
        'url': 'str',
        'disapproval_reason_codes': 'list[str]'
    }

    attribute_map = {
        'display_order': 'displayOrder',
        'media_id': 'mediaId',
        'headline': 'headline',
        'description': 'description',
        'url': 'url',
        'disapproval_reason_codes': 'disapprovalReasonCodes'
    }

    def __init__(self, display_order=None, media_id=None, headline=None, description=None, url=None, disapproval_reason_codes=None, local_vars_configuration=None):  # noqa: E501
        """GuaranteedAdGroupAdServiceCarousel - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._display_order = None
        self._media_id = None
        self._headline = None
        self._description = None
        self._url = None
        self._disapproval_reason_codes = None
        self.discriminator = None

        self.display_order = display_order
        self.media_id = media_id
        self.headline = headline
        self.description = description
        self.url = url
        self.disapproval_reason_codes = disapproval_reason_codes

    @property
    def display_order(self):
        """Gets the display_order of this GuaranteedAdGroupAdServiceCarousel.  # noqa: E501

        <div lang=\"ja\"> カルーセルの表示順です。<br> ADDおよびSET時、このフィールドは省略可能となります。<br> ※指定しない場合は自動で設定されます。 </div> <div lang=\"en\"> Carousel display order.<br> This field is optional in ADD and SET operation.<br> *If not specified, it will be set automatically. </div>   # noqa: E501

        :return: The display_order of this GuaranteedAdGroupAdServiceCarousel.  # noqa: E501
        :rtype: int
        """
        return self._display_order

    @display_order.setter
    def display_order(self, display_order):
        """Sets the display_order of this GuaranteedAdGroupAdServiceCarousel.

        <div lang=\"ja\"> カルーセルの表示順です。<br> ADDおよびSET時、このフィールドは省略可能となります。<br> ※指定しない場合は自動で設定されます。 </div> <div lang=\"en\"> Carousel display order.<br> This field is optional in ADD and SET operation.<br> *If not specified, it will be set automatically. </div>   # noqa: E501

        :param display_order: The display_order of this GuaranteedAdGroupAdServiceCarousel.  # noqa: E501
        :type: int
        """

        self._display_order = display_order

    @property
    def media_id(self):
        """Gets the media_id of this GuaranteedAdGroupAdServiceCarousel.  # noqa: E501

        <div lang=\"ja\"> メディアIDです。<br> このフィールドは、ADD時およびSET時に指定不可です。 </div> <div lang=\"en\"> Media ID.<br> This field cannot be specified in ADD and SET operation. </div>   # noqa: E501

        :return: The media_id of this GuaranteedAdGroupAdServiceCarousel.  # noqa: E501
        :rtype: int
        """
        return self._media_id

    @media_id.setter
    def media_id(self, media_id):
        """Sets the media_id of this GuaranteedAdGroupAdServiceCarousel.

        <div lang=\"ja\"> メディアIDです。<br> このフィールドは、ADD時およびSET時に指定不可です。 </div> <div lang=\"en\"> Media ID.<br> This field cannot be specified in ADD and SET operation. </div>   # noqa: E501

        :param media_id: The media_id of this GuaranteedAdGroupAdServiceCarousel.  # noqa: E501
        :type: int
        """

        self._media_id = media_id

    @property
    def headline(self):
        """Gets the headline of this GuaranteedAdGroupAdServiceCarousel.  # noqa: E501

        <div lang=\"ja\"> 広告のタイトルです。<br> このフィールドは、ADD時およびSET時に必須です。 </div> <div lang=\"en\"> Ad title.<br> This field is required in ADD and SET operation. </div>   # noqa: E501

        :return: The headline of this GuaranteedAdGroupAdServiceCarousel.  # noqa: E501
        :rtype: str
        """
        return self._headline

    @headline.setter
    def headline(self, headline):
        """Sets the headline of this GuaranteedAdGroupAdServiceCarousel.

        <div lang=\"ja\"> 広告のタイトルです。<br> このフィールドは、ADD時およびSET時に必須です。 </div> <div lang=\"en\"> Ad title.<br> This field is required in ADD and SET operation. </div>   # noqa: E501

        :param headline: The headline of this GuaranteedAdGroupAdServiceCarousel.  # noqa: E501
        :type: str
        """

        self._headline = headline

    @property
    def description(self):
        """Gets the description of this GuaranteedAdGroupAdServiceCarousel.  # noqa: E501

        <div lang=\"ja\"> 広告の説明文です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Ad description.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :return: The description of this GuaranteedAdGroupAdServiceCarousel.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GuaranteedAdGroupAdServiceCarousel.

        <div lang=\"ja\"> 広告の説明文です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Ad description.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :param description: The description of this GuaranteedAdGroupAdServiceCarousel.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def url(self):
        """Gets the url of this GuaranteedAdGroupAdServiceCarousel.  # noqa: E501

        <div lang=\"ja\"> リンク先URLです。<br> このフィールドは、ADD時およびSET時に必須です。 </div> <div lang=\"en\"> Destination URL.<br> This field is required in ADD and SET operation. </div>   # noqa: E501

        :return: The url of this GuaranteedAdGroupAdServiceCarousel.  # noqa: E501
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this GuaranteedAdGroupAdServiceCarousel.

        <div lang=\"ja\"> リンク先URLです。<br> このフィールドは、ADD時およびSET時に必須です。 </div> <div lang=\"en\"> Destination URL.<br> This field is required in ADD and SET operation. </div>   # noqa: E501

        :param url: The url of this GuaranteedAdGroupAdServiceCarousel.  # noqa: E501
        :type: str
        """

        self._url = url

    @property
    def disapproval_reason_codes(self):
        """Gets the disapproval_reason_codes of this GuaranteedAdGroupAdServiceCarousel.  # noqa: E501

        <div lang=\"ja\"> 掲載拒否の理由です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Reject reason on editorial review.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :return: The disapproval_reason_codes of this GuaranteedAdGroupAdServiceCarousel.  # noqa: E501
        :rtype: list[str]
        """
        return self._disapproval_reason_codes

    @disapproval_reason_codes.setter
    def disapproval_reason_codes(self, disapproval_reason_codes):
        """Sets the disapproval_reason_codes of this GuaranteedAdGroupAdServiceCarousel.

        <div lang=\"ja\"> 掲載拒否の理由です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Reject reason on editorial review.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :param disapproval_reason_codes: The disapproval_reason_codes of this GuaranteedAdGroupAdServiceCarousel.  # noqa: E501
        :type: list[str]
        """

        self._disapproval_reason_codes = disapproval_reason_codes

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GuaranteedAdGroupAdServiceCarousel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, GuaranteedAdGroupAdServiceCarousel):
            return True

        return self.to_dict() != other.to_dict()
