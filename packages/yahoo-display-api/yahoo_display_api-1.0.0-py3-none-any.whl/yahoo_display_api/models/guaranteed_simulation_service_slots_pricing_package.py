# coding: utf-8

"""
    Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! JAPAN Ads Display Ads API Reference

    <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/design/v6/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v6
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_display_api.configuration import Configuration


class GuaranteedSimulationServiceSlotsPricingPackage(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'fixed_lifetime_budget': 'int',
        'fixed_budget_apply_term_type': 'GuaranteedSimulationServiceFixedBudgetApplyTermType',
        'selling_slots': 'int',
        'minimum_buying_slots': 'int'
    }

    attribute_map = {
        'fixed_lifetime_budget': 'fixedLifetimeBudget',
        'fixed_budget_apply_term_type': 'fixedBudgetApplyTermType',
        'selling_slots': 'sellingSlots',
        'minimum_buying_slots': 'minimumBuyingSlots'
    }

    def __init__(self, fixed_lifetime_budget=None, fixed_budget_apply_term_type=None, selling_slots=None, minimum_buying_slots=None, local_vars_configuration=None):  # noqa: E501
        """GuaranteedSimulationServiceSlotsPricingPackage - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._fixed_lifetime_budget = None
        self._fixed_budget_apply_term_type = None
        self._selling_slots = None
        self._minimum_buying_slots = None
        self.discriminator = None

        self.fixed_lifetime_budget = fixed_lifetime_budget
        self.fixed_budget_apply_term_type = fixed_budget_apply_term_type
        self.selling_slots = selling_slots
        self.minimum_buying_slots = minimum_buying_slots

    @property
    def fixed_lifetime_budget(self):
        """Gets the fixed_lifetime_budget of this GuaranteedSimulationServiceSlotsPricingPackage.  # noqa: E501

        <div lang=\"ja\">商品価格を表します。</div> <div lang=\"en\">Package price.</div>   # noqa: E501

        :return: The fixed_lifetime_budget of this GuaranteedSimulationServiceSlotsPricingPackage.  # noqa: E501
        :rtype: int
        """
        return self._fixed_lifetime_budget

    @fixed_lifetime_budget.setter
    def fixed_lifetime_budget(self, fixed_lifetime_budget):
        """Sets the fixed_lifetime_budget of this GuaranteedSimulationServiceSlotsPricingPackage.

        <div lang=\"ja\">商品価格を表します。</div> <div lang=\"en\">Package price.</div>   # noqa: E501

        :param fixed_lifetime_budget: The fixed_lifetime_budget of this GuaranteedSimulationServiceSlotsPricingPackage.  # noqa: E501
        :type: int
        """

        self._fixed_lifetime_budget = fixed_lifetime_budget

    @property
    def fixed_budget_apply_term_type(self):
        """Gets the fixed_budget_apply_term_type of this GuaranteedSimulationServiceSlotsPricingPackage.  # noqa: E501


        :return: The fixed_budget_apply_term_type of this GuaranteedSimulationServiceSlotsPricingPackage.  # noqa: E501
        :rtype: GuaranteedSimulationServiceFixedBudgetApplyTermType
        """
        return self._fixed_budget_apply_term_type

    @fixed_budget_apply_term_type.setter
    def fixed_budget_apply_term_type(self, fixed_budget_apply_term_type):
        """Sets the fixed_budget_apply_term_type of this GuaranteedSimulationServiceSlotsPricingPackage.


        :param fixed_budget_apply_term_type: The fixed_budget_apply_term_type of this GuaranteedSimulationServiceSlotsPricingPackage.  # noqa: E501
        :type: GuaranteedSimulationServiceFixedBudgetApplyTermType
        """

        self._fixed_budget_apply_term_type = fixed_budget_apply_term_type

    @property
    def selling_slots(self):
        """Gets the selling_slots of this GuaranteedSimulationServiceSlotsPricingPackage.  # noqa: E501

        <div lang=\"ja\">販売枠数を表します。</div> <div lang=\"en\">Number of selling slots.</div>   # noqa: E501

        :return: The selling_slots of this GuaranteedSimulationServiceSlotsPricingPackage.  # noqa: E501
        :rtype: int
        """
        return self._selling_slots

    @selling_slots.setter
    def selling_slots(self, selling_slots):
        """Sets the selling_slots of this GuaranteedSimulationServiceSlotsPricingPackage.

        <div lang=\"ja\">販売枠数を表します。</div> <div lang=\"en\">Number of selling slots.</div>   # noqa: E501

        :param selling_slots: The selling_slots of this GuaranteedSimulationServiceSlotsPricingPackage.  # noqa: E501
        :type: int
        """

        self._selling_slots = selling_slots

    @property
    def minimum_buying_slots(self):
        """Gets the minimum_buying_slots of this GuaranteedSimulationServiceSlotsPricingPackage.  # noqa: E501

        <div lang=\"ja\">最低購入枠数を表します。</div> <div lang=\"en\">Minimum number of purchase slots.</div>   # noqa: E501

        :return: The minimum_buying_slots of this GuaranteedSimulationServiceSlotsPricingPackage.  # noqa: E501
        :rtype: int
        """
        return self._minimum_buying_slots

    @minimum_buying_slots.setter
    def minimum_buying_slots(self, minimum_buying_slots):
        """Sets the minimum_buying_slots of this GuaranteedSimulationServiceSlotsPricingPackage.

        <div lang=\"ja\">最低購入枠数を表します。</div> <div lang=\"en\">Minimum number of purchase slots.</div>   # noqa: E501

        :param minimum_buying_slots: The minimum_buying_slots of this GuaranteedSimulationServiceSlotsPricingPackage.  # noqa: E501
        :type: int
        """

        self._minimum_buying_slots = minimum_buying_slots

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GuaranteedSimulationServiceSlotsPricingPackage):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, GuaranteedSimulationServiceSlotsPricingPackage):
            return True

        return self.to_dict() != other.to_dict()
