# coding: utf-8

"""
    Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! JAPAN Ads Display Ads API Reference

    <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/design/v6/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v6
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_display_api.configuration import Configuration


class GuaranteedInventoryServiceInventoryResult(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'start_date': 'str',
        'end_date': 'str',
        'max_sellable_v_imps': 'int',
        'max_reservable_v_imps': 'int',
        'selling_slots': 'int',
        'max_reservable_slots': 'int',
        'unavailable_reasons': 'list[GuaranteedInventoryServiceUnavailableReason]',
        'unreservable_reason': 'GuaranteedInventoryServiceUnreservableReason'
    }

    attribute_map = {
        'start_date': 'startDate',
        'end_date': 'endDate',
        'max_sellable_v_imps': 'maxSellableVImps',
        'max_reservable_v_imps': 'maxReservableVImps',
        'selling_slots': 'sellingSlots',
        'max_reservable_slots': 'maxReservableSlots',
        'unavailable_reasons': 'unavailableReasons',
        'unreservable_reason': 'unreservableReason'
    }

    def __init__(self, start_date=None, end_date=None, max_sellable_v_imps=None, max_reservable_v_imps=None, selling_slots=None, max_reservable_slots=None, unavailable_reasons=None, unreservable_reason=None, local_vars_configuration=None):  # noqa: E501
        """GuaranteedInventoryServiceInventoryResult - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._start_date = None
        self._end_date = None
        self._max_sellable_v_imps = None
        self._max_reservable_v_imps = None
        self._selling_slots = None
        self._max_reservable_slots = None
        self._unavailable_reasons = None
        self._unreservable_reason = None
        self.discriminator = None

        self.start_date = start_date
        self.end_date = end_date
        self.max_sellable_v_imps = max_sellable_v_imps
        self.max_reservable_v_imps = max_reservable_v_imps
        self.selling_slots = selling_slots
        self.max_reservable_slots = max_reservable_slots
        self.unavailable_reasons = unavailable_reasons
        self.unreservable_reason = unreservable_reason

    @property
    def start_date(self):
        """Gets the start_date of this GuaranteedInventoryServiceInventoryResult.  # noqa: E501

        <div lang=\"ja\"> キャンペーンの開始日です。<br> </div> <div lang=\"en\"> Start date of campaign. <br> </div> Format: yyyyMMdd   # noqa: E501

        :return: The start_date of this GuaranteedInventoryServiceInventoryResult.  # noqa: E501
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this GuaranteedInventoryServiceInventoryResult.

        <div lang=\"ja\"> キャンペーンの開始日です。<br> </div> <div lang=\"en\"> Start date of campaign. <br> </div> Format: yyyyMMdd   # noqa: E501

        :param start_date: The start_date of this GuaranteedInventoryServiceInventoryResult.  # noqa: E501
        :type: str
        """

        self._start_date = start_date

    @property
    def end_date(self):
        """Gets the end_date of this GuaranteedInventoryServiceInventoryResult.  # noqa: E501

        <div lang=\"ja\"> キャンペーンの終了日です。<br> </div> <div lang=\"en\"> End date of campaign. <br> </div> Format: yyyyMMdd   # noqa: E501

        :return: The end_date of this GuaranteedInventoryServiceInventoryResult.  # noqa: E501
        :rtype: str
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this GuaranteedInventoryServiceInventoryResult.

        <div lang=\"ja\"> キャンペーンの終了日です。<br> </div> <div lang=\"en\"> End date of campaign. <br> </div> Format: yyyyMMdd   # noqa: E501

        :param end_date: The end_date of this GuaranteedInventoryServiceInventoryResult.  # noqa: E501
        :type: str
        """

        self._end_date = end_date

    @property
    def max_sellable_v_imps(self):
        """Gets the max_sellable_v_imps of this GuaranteedInventoryServiceInventoryResult.  # noqa: E501

        <div lang=\"ja\"> 指定期間で販売可能なビューアブルインプレッション数の在庫です。<br> </div> <div lang=\"en\"> Inventory of sellable viewable impression under the specified period.<br> </div>   # noqa: E501

        :return: The max_sellable_v_imps of this GuaranteedInventoryServiceInventoryResult.  # noqa: E501
        :rtype: int
        """
        return self._max_sellable_v_imps

    @max_sellable_v_imps.setter
    def max_sellable_v_imps(self, max_sellable_v_imps):
        """Sets the max_sellable_v_imps of this GuaranteedInventoryServiceInventoryResult.

        <div lang=\"ja\"> 指定期間で販売可能なビューアブルインプレッション数の在庫です。<br> </div> <div lang=\"en\"> Inventory of sellable viewable impression under the specified period.<br> </div>   # noqa: E501

        :param max_sellable_v_imps: The max_sellable_v_imps of this GuaranteedInventoryServiceInventoryResult.  # noqa: E501
        :type: int
        """

        self._max_sellable_v_imps = max_sellable_v_imps

    @property
    def max_reservable_v_imps(self):
        """Gets the max_reservable_v_imps of this GuaranteedInventoryServiceInventoryResult.  # noqa: E501

        <div lang=\"ja\"> 指定期間のビューアブルインプレッション数の残在庫です。<br> </div> <div lang=\"en\"> Residual inventory of viewable impression under the specified period.<br> </div>   # noqa: E501

        :return: The max_reservable_v_imps of this GuaranteedInventoryServiceInventoryResult.  # noqa: E501
        :rtype: int
        """
        return self._max_reservable_v_imps

    @max_reservable_v_imps.setter
    def max_reservable_v_imps(self, max_reservable_v_imps):
        """Sets the max_reservable_v_imps of this GuaranteedInventoryServiceInventoryResult.

        <div lang=\"ja\"> 指定期間のビューアブルインプレッション数の残在庫です。<br> </div> <div lang=\"en\"> Residual inventory of viewable impression under the specified period.<br> </div>   # noqa: E501

        :param max_reservable_v_imps: The max_reservable_v_imps of this GuaranteedInventoryServiceInventoryResult.  # noqa: E501
        :type: int
        """

        self._max_reservable_v_imps = max_reservable_v_imps

    @property
    def selling_slots(self):
        """Gets the selling_slots of this GuaranteedInventoryServiceInventoryResult.  # noqa: E501

        <div lang=\"ja\"> 指定期間で販売可能な枠数の在庫です。<br> </div> <div lang=\"en\"> Inventory of sellable slots under the specified period.<br> </div>   # noqa: E501

        :return: The selling_slots of this GuaranteedInventoryServiceInventoryResult.  # noqa: E501
        :rtype: int
        """
        return self._selling_slots

    @selling_slots.setter
    def selling_slots(self, selling_slots):
        """Sets the selling_slots of this GuaranteedInventoryServiceInventoryResult.

        <div lang=\"ja\"> 指定期間で販売可能な枠数の在庫です。<br> </div> <div lang=\"en\"> Inventory of sellable slots under the specified period.<br> </div>   # noqa: E501

        :param selling_slots: The selling_slots of this GuaranteedInventoryServiceInventoryResult.  # noqa: E501
        :type: int
        """

        self._selling_slots = selling_slots

    @property
    def max_reservable_slots(self):
        """Gets the max_reservable_slots of this GuaranteedInventoryServiceInventoryResult.  # noqa: E501

        <div lang=\"ja\"> 指定期間で予約可能な最大枠数です。<br> </div> <div lang=\"en\"> Maximum number of reservable slots under the specified period.<br> </div>   # noqa: E501

        :return: The max_reservable_slots of this GuaranteedInventoryServiceInventoryResult.  # noqa: E501
        :rtype: int
        """
        return self._max_reservable_slots

    @max_reservable_slots.setter
    def max_reservable_slots(self, max_reservable_slots):
        """Sets the max_reservable_slots of this GuaranteedInventoryServiceInventoryResult.

        <div lang=\"ja\"> 指定期間で予約可能な最大枠数です。<br> </div> <div lang=\"en\"> Maximum number of reservable slots under the specified period.<br> </div>   # noqa: E501

        :param max_reservable_slots: The max_reservable_slots of this GuaranteedInventoryServiceInventoryResult.  # noqa: E501
        :type: int
        """

        self._max_reservable_slots = max_reservable_slots

    @property
    def unavailable_reasons(self):
        """Gets the unavailable_reasons of this GuaranteedInventoryServiceInventoryResult.  # noqa: E501


        :return: The unavailable_reasons of this GuaranteedInventoryServiceInventoryResult.  # noqa: E501
        :rtype: list[GuaranteedInventoryServiceUnavailableReason]
        """
        return self._unavailable_reasons

    @unavailable_reasons.setter
    def unavailable_reasons(self, unavailable_reasons):
        """Sets the unavailable_reasons of this GuaranteedInventoryServiceInventoryResult.


        :param unavailable_reasons: The unavailable_reasons of this GuaranteedInventoryServiceInventoryResult.  # noqa: E501
        :type: list[GuaranteedInventoryServiceUnavailableReason]
        """

        self._unavailable_reasons = unavailable_reasons

    @property
    def unreservable_reason(self):
        """Gets the unreservable_reason of this GuaranteedInventoryServiceInventoryResult.  # noqa: E501


        :return: The unreservable_reason of this GuaranteedInventoryServiceInventoryResult.  # noqa: E501
        :rtype: GuaranteedInventoryServiceUnreservableReason
        """
        return self._unreservable_reason

    @unreservable_reason.setter
    def unreservable_reason(self, unreservable_reason):
        """Sets the unreservable_reason of this GuaranteedInventoryServiceInventoryResult.


        :param unreservable_reason: The unreservable_reason of this GuaranteedInventoryServiceInventoryResult.  # noqa: E501
        :type: GuaranteedInventoryServiceUnreservableReason
        """

        self._unreservable_reason = unreservable_reason

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GuaranteedInventoryServiceInventoryResult):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, GuaranteedInventoryServiceInventoryResult):
            return True

        return self.to_dict() != other.to_dict()
