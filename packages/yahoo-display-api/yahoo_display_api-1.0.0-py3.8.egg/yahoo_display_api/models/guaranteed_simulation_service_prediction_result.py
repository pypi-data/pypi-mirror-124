# coding: utf-8

"""
    Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! JAPAN Ads Display Ads API Reference

    <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/design/v6/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v6
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_display_api.configuration import Configuration


class GuaranteedSimulationServicePredictionResult(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'lifetime_budget': 'int',
        'reach': 'int',
        'v_imps': 'int',
        'vcpm': 'int',
        'viewable_frequency': 'float',
        'sov_rate': 'float'
    }

    attribute_map = {
        'lifetime_budget': 'lifetimeBudget',
        'reach': 'reach',
        'v_imps': 'vImps',
        'vcpm': 'vcpm',
        'viewable_frequency': 'viewableFrequency',
        'sov_rate': 'sovRate'
    }

    def __init__(self, lifetime_budget=None, reach=None, v_imps=None, vcpm=None, viewable_frequency=None, sov_rate=None, local_vars_configuration=None):  # noqa: E501
        """GuaranteedSimulationServicePredictionResult - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._lifetime_budget = None
        self._reach = None
        self._v_imps = None
        self._vcpm = None
        self._viewable_frequency = None
        self._sov_rate = None
        self.discriminator = None

        self.lifetime_budget = lifetime_budget
        self.reach = reach
        self.v_imps = v_imps
        self.vcpm = vcpm
        self.viewable_frequency = viewable_frequency
        self.sov_rate = sov_rate

    @property
    def lifetime_budget(self):
        """Gets the lifetime_budget of this GuaranteedSimulationServicePredictionResult.  # noqa: E501

        <div lang=\"ja\"> 通期予算です。<br> ※この「通期予算」は、キャンペーンの全期間を通じて消費される予算を意味します。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Lifetime budget.<br> * \"lifetime budget\" means the total budget that is spent throughout the entire duration of the campaign.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :return: The lifetime_budget of this GuaranteedSimulationServicePredictionResult.  # noqa: E501
        :rtype: int
        """
        return self._lifetime_budget

    @lifetime_budget.setter
    def lifetime_budget(self, lifetime_budget):
        """Sets the lifetime_budget of this GuaranteedSimulationServicePredictionResult.

        <div lang=\"ja\"> 通期予算です。<br> ※この「通期予算」は、キャンペーンの全期間を通じて消費される予算を意味します。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Lifetime budget.<br> * \"lifetime budget\" means the total budget that is spent throughout the entire duration of the campaign.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :param lifetime_budget: The lifetime_budget of this GuaranteedSimulationServicePredictionResult.  # noqa: E501
        :type: int
        """

        self._lifetime_budget = lifetime_budget

    @property
    def reach(self):
        """Gets the reach of this GuaranteedSimulationServicePredictionResult.  # noqa: E501

        <div lang=\"ja\"> リーチ数です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Number of reaches.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :return: The reach of this GuaranteedSimulationServicePredictionResult.  # noqa: E501
        :rtype: int
        """
        return self._reach

    @reach.setter
    def reach(self, reach):
        """Sets the reach of this GuaranteedSimulationServicePredictionResult.

        <div lang=\"ja\"> リーチ数です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Number of reaches.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :param reach: The reach of this GuaranteedSimulationServicePredictionResult.  # noqa: E501
        :type: int
        """

        self._reach = reach

    @property
    def v_imps(self):
        """Gets the v_imps of this GuaranteedSimulationServicePredictionResult.  # noqa: E501

        <div lang=\"ja\"> ビューアブルインプレッションです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Viewable impressions.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :return: The v_imps of this GuaranteedSimulationServicePredictionResult.  # noqa: E501
        :rtype: int
        """
        return self._v_imps

    @v_imps.setter
    def v_imps(self, v_imps):
        """Sets the v_imps of this GuaranteedSimulationServicePredictionResult.

        <div lang=\"ja\"> ビューアブルインプレッションです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Viewable impressions.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :param v_imps: The v_imps of this GuaranteedSimulationServicePredictionResult.  # noqa: E501
        :type: int
        """

        self._v_imps = v_imps

    @property
    def vcpm(self):
        """Gets the vcpm of this GuaranteedSimulationServicePredictionResult.  # noqa: E501

        <div lang=\"ja\"> vCPMです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> VCPM.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :return: The vcpm of this GuaranteedSimulationServicePredictionResult.  # noqa: E501
        :rtype: int
        """
        return self._vcpm

    @vcpm.setter
    def vcpm(self, vcpm):
        """Sets the vcpm of this GuaranteedSimulationServicePredictionResult.

        <div lang=\"ja\"> vCPMです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> VCPM.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :param vcpm: The vcpm of this GuaranteedSimulationServicePredictionResult.  # noqa: E501
        :type: int
        """

        self._vcpm = vcpm

    @property
    def viewable_frequency(self):
        """Gets the viewable_frequency of this GuaranteedSimulationServicePredictionResult.  # noqa: E501

        <div lang=\"ja\"> ビューアブルフリークエンシーです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Viewable frequency.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :return: The viewable_frequency of this GuaranteedSimulationServicePredictionResult.  # noqa: E501
        :rtype: float
        """
        return self._viewable_frequency

    @viewable_frequency.setter
    def viewable_frequency(self, viewable_frequency):
        """Sets the viewable_frequency of this GuaranteedSimulationServicePredictionResult.

        <div lang=\"ja\"> ビューアブルフリークエンシーです。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Viewable frequency.<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :param viewable_frequency: The viewable_frequency of this GuaranteedSimulationServicePredictionResult.  # noqa: E501
        :type: float
        """

        self._viewable_frequency = viewable_frequency

    @property
    def sov_rate(self):
        """Gets the sov_rate of this GuaranteedSimulationServicePredictionResult.  # noqa: E501

        <div lang=\"ja\"> SOV（0.0%〜100.0%）です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> SOV (0.0% to 100.0%).<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :return: The sov_rate of this GuaranteedSimulationServicePredictionResult.  # noqa: E501
        :rtype: float
        """
        return self._sov_rate

    @sov_rate.setter
    def sov_rate(self, sov_rate):
        """Sets the sov_rate of this GuaranteedSimulationServicePredictionResult.

        <div lang=\"ja\"> SOV（0.0%〜100.0%）です。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> SOV (0.0% to 100.0%).<br> Although this field will be returned in the response, it will be ignored on input. </div>   # noqa: E501

        :param sov_rate: The sov_rate of this GuaranteedSimulationServicePredictionResult.  # noqa: E501
        :type: float
        """

        self._sov_rate = sov_rate

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GuaranteedSimulationServicePredictionResult):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, GuaranteedSimulationServicePredictionResult):
            return True

        return self.to_dict() != other.to_dict()
