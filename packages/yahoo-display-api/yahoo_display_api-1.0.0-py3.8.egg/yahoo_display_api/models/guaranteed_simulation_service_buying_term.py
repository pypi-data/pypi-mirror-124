# coding: utf-8

"""
    Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! JAPAN Ads Display Ads API Reference

    <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/design/v6/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v6
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_display_api.configuration import Configuration


class GuaranteedSimulationServiceBuyingTerm(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'buying_term_type': 'GuaranteedSimulationServiceBuyingTermType',
        'single_day_buying_term': 'GuaranteedSimulationServiceSingleDayBuyingTerm',
        'single_term_buying_term': 'GuaranteedSimulationServiceSingleTermBuyingTerm',
        'custom_range_buying_term': 'GuaranteedSimulationServiceCustomRangeBuyingTerm'
    }

    attribute_map = {
        'buying_term_type': 'buyingTermType',
        'single_day_buying_term': 'singleDayBuyingTerm',
        'single_term_buying_term': 'singleTermBuyingTerm',
        'custom_range_buying_term': 'customRangeBuyingTerm'
    }

    def __init__(self, buying_term_type=None, single_day_buying_term=None, single_term_buying_term=None, custom_range_buying_term=None, local_vars_configuration=None):  # noqa: E501
        """GuaranteedSimulationServiceBuyingTerm - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._buying_term_type = None
        self._single_day_buying_term = None
        self._single_term_buying_term = None
        self._custom_range_buying_term = None
        self.discriminator = None

        self.buying_term_type = buying_term_type
        self.single_day_buying_term = single_day_buying_term
        self.single_term_buying_term = single_term_buying_term
        self.custom_range_buying_term = custom_range_buying_term

    @property
    def buying_term_type(self):
        """Gets the buying_term_type of this GuaranteedSimulationServiceBuyingTerm.  # noqa: E501


        :return: The buying_term_type of this GuaranteedSimulationServiceBuyingTerm.  # noqa: E501
        :rtype: GuaranteedSimulationServiceBuyingTermType
        """
        return self._buying_term_type

    @buying_term_type.setter
    def buying_term_type(self, buying_term_type):
        """Sets the buying_term_type of this GuaranteedSimulationServiceBuyingTerm.


        :param buying_term_type: The buying_term_type of this GuaranteedSimulationServiceBuyingTerm.  # noqa: E501
        :type: GuaranteedSimulationServiceBuyingTermType
        """

        self._buying_term_type = buying_term_type

    @property
    def single_day_buying_term(self):
        """Gets the single_day_buying_term of this GuaranteedSimulationServiceBuyingTerm.  # noqa: E501


        :return: The single_day_buying_term of this GuaranteedSimulationServiceBuyingTerm.  # noqa: E501
        :rtype: GuaranteedSimulationServiceSingleDayBuyingTerm
        """
        return self._single_day_buying_term

    @single_day_buying_term.setter
    def single_day_buying_term(self, single_day_buying_term):
        """Sets the single_day_buying_term of this GuaranteedSimulationServiceBuyingTerm.


        :param single_day_buying_term: The single_day_buying_term of this GuaranteedSimulationServiceBuyingTerm.  # noqa: E501
        :type: GuaranteedSimulationServiceSingleDayBuyingTerm
        """

        self._single_day_buying_term = single_day_buying_term

    @property
    def single_term_buying_term(self):
        """Gets the single_term_buying_term of this GuaranteedSimulationServiceBuyingTerm.  # noqa: E501


        :return: The single_term_buying_term of this GuaranteedSimulationServiceBuyingTerm.  # noqa: E501
        :rtype: GuaranteedSimulationServiceSingleTermBuyingTerm
        """
        return self._single_term_buying_term

    @single_term_buying_term.setter
    def single_term_buying_term(self, single_term_buying_term):
        """Sets the single_term_buying_term of this GuaranteedSimulationServiceBuyingTerm.


        :param single_term_buying_term: The single_term_buying_term of this GuaranteedSimulationServiceBuyingTerm.  # noqa: E501
        :type: GuaranteedSimulationServiceSingleTermBuyingTerm
        """

        self._single_term_buying_term = single_term_buying_term

    @property
    def custom_range_buying_term(self):
        """Gets the custom_range_buying_term of this GuaranteedSimulationServiceBuyingTerm.  # noqa: E501


        :return: The custom_range_buying_term of this GuaranteedSimulationServiceBuyingTerm.  # noqa: E501
        :rtype: GuaranteedSimulationServiceCustomRangeBuyingTerm
        """
        return self._custom_range_buying_term

    @custom_range_buying_term.setter
    def custom_range_buying_term(self, custom_range_buying_term):
        """Sets the custom_range_buying_term of this GuaranteedSimulationServiceBuyingTerm.


        :param custom_range_buying_term: The custom_range_buying_term of this GuaranteedSimulationServiceBuyingTerm.  # noqa: E501
        :type: GuaranteedSimulationServiceCustomRangeBuyingTerm
        """

        self._custom_range_buying_term = custom_range_buying_term

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GuaranteedSimulationServiceBuyingTerm):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, GuaranteedSimulationServiceBuyingTerm):
            return True

        return self.to_dict() != other.to_dict()
