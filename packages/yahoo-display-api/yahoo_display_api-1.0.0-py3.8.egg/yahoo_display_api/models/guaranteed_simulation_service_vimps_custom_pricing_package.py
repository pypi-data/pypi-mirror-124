# coding: utf-8

"""
    Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! JAPAN Ads Display Ads API Reference

    <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/design/v6/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v6
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yahoo_display_api.configuration import Configuration


class GuaranteedSimulationServiceVimpsCustomPricingPackage(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'fixed_lifetime_budget': 'int',
        'minimum_purchase_budget': 'int',
        'minimum_purchase_v_imps': 'int',
        'maximum_purchase_v_imps': 'int'
    }

    attribute_map = {
        'fixed_lifetime_budget': 'fixedLifetimeBudget',
        'minimum_purchase_budget': 'minimumPurchaseBudget',
        'minimum_purchase_v_imps': 'minimumPurchaseVImps',
        'maximum_purchase_v_imps': 'maximumPurchaseVImps'
    }

    def __init__(self, fixed_lifetime_budget=None, minimum_purchase_budget=None, minimum_purchase_v_imps=None, maximum_purchase_v_imps=None, local_vars_configuration=None):  # noqa: E501
        """GuaranteedSimulationServiceVimpsCustomPricingPackage - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._fixed_lifetime_budget = None
        self._minimum_purchase_budget = None
        self._minimum_purchase_v_imps = None
        self._maximum_purchase_v_imps = None
        self.discriminator = None

        self.fixed_lifetime_budget = fixed_lifetime_budget
        self.minimum_purchase_budget = minimum_purchase_budget
        self.minimum_purchase_v_imps = minimum_purchase_v_imps
        self.maximum_purchase_v_imps = maximum_purchase_v_imps

    @property
    def fixed_lifetime_budget(self):
        """Gets the fixed_lifetime_budget of this GuaranteedSimulationServiceVimpsCustomPricingPackage.  # noqa: E501

        <div lang=\"ja\">商品価格を表します。</div> <div lang=\"en\">Package price.</div>   # noqa: E501

        :return: The fixed_lifetime_budget of this GuaranteedSimulationServiceVimpsCustomPricingPackage.  # noqa: E501
        :rtype: int
        """
        return self._fixed_lifetime_budget

    @fixed_lifetime_budget.setter
    def fixed_lifetime_budget(self, fixed_lifetime_budget):
        """Sets the fixed_lifetime_budget of this GuaranteedSimulationServiceVimpsCustomPricingPackage.

        <div lang=\"ja\">商品価格を表します。</div> <div lang=\"en\">Package price.</div>   # noqa: E501

        :param fixed_lifetime_budget: The fixed_lifetime_budget of this GuaranteedSimulationServiceVimpsCustomPricingPackage.  # noqa: E501
        :type: int
        """

        self._fixed_lifetime_budget = fixed_lifetime_budget

    @property
    def minimum_purchase_budget(self):
        """Gets the minimum_purchase_budget of this GuaranteedSimulationServiceVimpsCustomPricingPackage.  # noqa: E501

        <div lang=\"ja\">最低購入価格を表します。</div> <div lang=\"en\">Minimum Purchase price.</div>   # noqa: E501

        :return: The minimum_purchase_budget of this GuaranteedSimulationServiceVimpsCustomPricingPackage.  # noqa: E501
        :rtype: int
        """
        return self._minimum_purchase_budget

    @minimum_purchase_budget.setter
    def minimum_purchase_budget(self, minimum_purchase_budget):
        """Sets the minimum_purchase_budget of this GuaranteedSimulationServiceVimpsCustomPricingPackage.

        <div lang=\"ja\">最低購入価格を表します。</div> <div lang=\"en\">Minimum Purchase price.</div>   # noqa: E501

        :param minimum_purchase_budget: The minimum_purchase_budget of this GuaranteedSimulationServiceVimpsCustomPricingPackage.  # noqa: E501
        :type: int
        """

        self._minimum_purchase_budget = minimum_purchase_budget

    @property
    def minimum_purchase_v_imps(self):
        """Gets the minimum_purchase_v_imps of this GuaranteedSimulationServiceVimpsCustomPricingPackage.  # noqa: E501

        <div lang=\"ja\">最低購入ビューアブルインプレッション数を表します。</div> <div lang=\"en\">Minimum purchase viewable impression.</div>   # noqa: E501

        :return: The minimum_purchase_v_imps of this GuaranteedSimulationServiceVimpsCustomPricingPackage.  # noqa: E501
        :rtype: int
        """
        return self._minimum_purchase_v_imps

    @minimum_purchase_v_imps.setter
    def minimum_purchase_v_imps(self, minimum_purchase_v_imps):
        """Sets the minimum_purchase_v_imps of this GuaranteedSimulationServiceVimpsCustomPricingPackage.

        <div lang=\"ja\">最低購入ビューアブルインプレッション数を表します。</div> <div lang=\"en\">Minimum purchase viewable impression.</div>   # noqa: E501

        :param minimum_purchase_v_imps: The minimum_purchase_v_imps of this GuaranteedSimulationServiceVimpsCustomPricingPackage.  # noqa: E501
        :type: int
        """

        self._minimum_purchase_v_imps = minimum_purchase_v_imps

    @property
    def maximum_purchase_v_imps(self):
        """Gets the maximum_purchase_v_imps of this GuaranteedSimulationServiceVimpsCustomPricingPackage.  # noqa: E501

        <div lang=\"ja\">最大購入ビューアブルインプレッション数を表します。</div> <div lang=\"en\">Maximum purchase viewable impression.</div>   # noqa: E501

        :return: The maximum_purchase_v_imps of this GuaranteedSimulationServiceVimpsCustomPricingPackage.  # noqa: E501
        :rtype: int
        """
        return self._maximum_purchase_v_imps

    @maximum_purchase_v_imps.setter
    def maximum_purchase_v_imps(self, maximum_purchase_v_imps):
        """Sets the maximum_purchase_v_imps of this GuaranteedSimulationServiceVimpsCustomPricingPackage.

        <div lang=\"ja\">最大購入ビューアブルインプレッション数を表します。</div> <div lang=\"en\">Maximum purchase viewable impression.</div>   # noqa: E501

        :param maximum_purchase_v_imps: The maximum_purchase_v_imps of this GuaranteedSimulationServiceVimpsCustomPricingPackage.  # noqa: E501
        :type: int
        """

        self._maximum_purchase_v_imps = maximum_purchase_v_imps

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GuaranteedSimulationServiceVimpsCustomPricingPackage):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, GuaranteedSimulationServiceVimpsCustomPricingPackage):
            return True

        return self.to_dict() != other.to_dict()
