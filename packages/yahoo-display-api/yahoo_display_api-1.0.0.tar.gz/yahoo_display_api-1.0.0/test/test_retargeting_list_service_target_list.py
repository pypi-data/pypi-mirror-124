# coding: utf-8

"""
    Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! JAPAN Ads Display Ads API Reference

    <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/design/v6/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v6
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import yahoo_display_api
from yahoo_display_api.models.retargeting_list_service_target_list import RetargetingListServiceTargetList  # noqa: E501
from yahoo_display_api.rest import ApiException

class TestRetargetingListServiceTargetList(unittest.TestCase):
    """RetargetingListServiceTargetList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test RetargetingListServiceTargetList
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = yahoo_display_api.models.retargeting_list_service_target_list.RetargetingListServiceTargetList()  # noqa: E501
        if include_optional :
            return RetargetingListServiceTargetList(
                combination_target_list = yahoo_display_api.models.retargeting_list_service_combination_target_list.RetargetingListServiceCombinationTargetList(
                    combinations = [
                        yahoo_display_api.models.retargeting_list_service_combination.RetargetingListServiceCombination(
                            logical_operator = 'OR', 
                            target_lists = [
                                yahoo_display_api.models.retargeting_list_service_target_list_data.RetargetingListServiceTargetListData(
                                    target_list_id = 56, 
                                    target_list_name = '0', )
                                ], )
                        ], ), 
                custom_audience_target_list = yahoo_display_api.models.retargeting_list_service_custom_audience_target_list.RetargetingListServiceCustomAudienceTargetList(
                    custom_audience_id = '0', 
                    reach_period = 56, ), 
                rule_target_list = yahoo_display_api.models.retargeting_list_service_rule_target_list.RetargetingListServiceRuleTargetList(
                    is_open = 'TRUE', 
                    is_preset = 'TRUE', 
                    reach_period = 56, 
                    retargeting_tag_id = '0', 
                    rules = [
                        yahoo_display_api.models.retargeting_list_service_rule.RetargetingListServiceRule(
                            rule_conditions = [
                                yahoo_display_api.models.retargeting_list_service_rule_condition.RetargetingListServiceRuleCondition(
                                    compare_operator = 'EQUAL', 
                                    rule_type = 'URL', 
                                    value = '0', )
                                ], )
                        ], ), 
                similarity_target_list = yahoo_display_api.models.retargeting_list_service_similarity_target_list.RetargetingListServiceSimilarityTargetList(
                    target_list_id = 56, 
                    target_list_size = 'RATE_1', 
                    target_list_size_reaches = [
                        yahoo_display_api.models.retargeting_list_service_target_list_size_reaches.RetargetingListServiceTargetListSizeReaches(
                            reach = 56, )
                        ], ), 
                target_list_type = 'DEFAULT_LIST'
            )
        else :
            return RetargetingListServiceTargetList(
                target_list_type = 'DEFAULT_LIST',
        )

    def testRetargetingListServiceTargetList(self):
        """Test RetargetingListServiceTargetList"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
