# coding: utf-8

"""
    Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! JAPAN Ads Display Ads API Reference

    <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/design/v6/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v6
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import yahoo_display_api
from yahoo_display_api.models.guaranteed_campaign_service_operation import GuaranteedCampaignServiceOperation  # noqa: E501
from yahoo_display_api.rest import ApiException

class TestGuaranteedCampaignServiceOperation(unittest.TestCase):
    """GuaranteedCampaignServiceOperation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test GuaranteedCampaignServiceOperation
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = yahoo_display_api.models.guaranteed_campaign_service_operation.GuaranteedCampaignServiceOperation()  # noqa: E501
        if include_optional :
            return GuaranteedCampaignServiceOperation(
                account_id = 56, 
                operand = [
                    yahoo_display_api.models.guaranteed_campaign.GuaranteedCampaign(
                        account_id = 56, 
                        lifetime_budget = yahoo_display_api.models.guaranteed_campaign_service_lifetime_budget.GuaranteedCampaignServiceLifetimeBudget(
                            amount = 56, ), 
                        campaign_bidding_strategy = yahoo_display_api.models.guaranteed_campaign_service_campaign_bidding_strategy.GuaranteedCampaignServiceCampaignBiddingStrategy(
                            campaign_bidding_strategy_type = 'MAX_VCPM', 
                            max_vcpm_bid_value = 56, 
                            sov_rate = 56, ), 
                        campaign_goal = '0', 
                        campaign_id = 56, 
                        campaign_name = '0', 
                        end_date = '0', 
                        labels = [
                            yahoo_display_api.models.guaranteed_campaign_service_label.GuaranteedCampaignServiceLabel(
                                color = '0', 
                                description = '0', 
                                label_id = 56, 
                                label_name = '0', )
                            ], 
                        serving_status = 'SERVING', 
                        start_date = '0', 
                        user_status = 'ACTIVE', 
                        viewable_frequency_cap = yahoo_display_api.models.guaranteed_campaign_service_viewable_frequency_cap.GuaranteedCampaignServiceViewableFrequencyCap(
                            frequency_level = 'CAMPAIGN', 
                            frequency_time_unit = 'DAY', 
                            v_imps = 56, ), 
                        guaranteed_simulation_id = 56, 
                        notification_email_address = [
                            '0'
                            ], 
                        ad_category_status = 'ADDED', 
                        campaign_canceled_date = '0', 
                        package = yahoo_display_api.models.guaranteed_campaign_service_package.GuaranteedCampaignServicePackage(
                            package_id = 56, 
                            package_history_id = 56, 
                            package_name = '0', ), 
                        brand_tracking = yahoo_display_api.models.guaranteed_campaign_service_brand_tracking.GuaranteedCampaignServiceBrandTracking(
                            audience_category_ids1 = [
                                '0'
                                ], 
                            audience_category_ids2 = [
                                '0'
                                ], 
                            business_category_ids = [
                                '0'
                                ], ), 
                        conversion_tracker = yahoo_display_api.models.guaranteed_campaign_service_conversion_tracker.GuaranteedCampaignServiceConversionTracker(
                            conversion_group_id = 56, 
                            conversion_tracker_id = 56, 
                            is_remove_conversion_group_id = 'TRUE', 
                            is_remove_conversion_tracker_id = 'TRUE', ), )
                    ]
            )
        else :
            return GuaranteedCampaignServiceOperation(
                account_id = 56,
                operand = [
                    yahoo_display_api.models.guaranteed_campaign.GuaranteedCampaign(
                        account_id = 56, 
                        lifetime_budget = yahoo_display_api.models.guaranteed_campaign_service_lifetime_budget.GuaranteedCampaignServiceLifetimeBudget(
                            amount = 56, ), 
                        campaign_bidding_strategy = yahoo_display_api.models.guaranteed_campaign_service_campaign_bidding_strategy.GuaranteedCampaignServiceCampaignBiddingStrategy(
                            campaign_bidding_strategy_type = 'MAX_VCPM', 
                            max_vcpm_bid_value = 56, 
                            sov_rate = 56, ), 
                        campaign_goal = '0', 
                        campaign_id = 56, 
                        campaign_name = '0', 
                        end_date = '0', 
                        labels = [
                            yahoo_display_api.models.guaranteed_campaign_service_label.GuaranteedCampaignServiceLabel(
                                color = '0', 
                                description = '0', 
                                label_id = 56, 
                                label_name = '0', )
                            ], 
                        serving_status = 'SERVING', 
                        start_date = '0', 
                        user_status = 'ACTIVE', 
                        viewable_frequency_cap = yahoo_display_api.models.guaranteed_campaign_service_viewable_frequency_cap.GuaranteedCampaignServiceViewableFrequencyCap(
                            frequency_level = 'CAMPAIGN', 
                            frequency_time_unit = 'DAY', 
                            v_imps = 56, ), 
                        guaranteed_simulation_id = 56, 
                        notification_email_address = [
                            '0'
                            ], 
                        ad_category_status = 'ADDED', 
                        campaign_canceled_date = '0', 
                        package = yahoo_display_api.models.guaranteed_campaign_service_package.GuaranteedCampaignServicePackage(
                            package_id = 56, 
                            package_history_id = 56, 
                            package_name = '0', ), 
                        brand_tracking = yahoo_display_api.models.guaranteed_campaign_service_brand_tracking.GuaranteedCampaignServiceBrandTracking(
                            audience_category_ids1 = [
                                '0'
                                ], 
                            audience_category_ids2 = [
                                '0'
                                ], 
                            business_category_ids = [
                                '0'
                                ], ), 
                        conversion_tracker = yahoo_display_api.models.guaranteed_campaign_service_conversion_tracker.GuaranteedCampaignServiceConversionTracker(
                            conversion_group_id = 56, 
                            conversion_tracker_id = 56, 
                            is_remove_conversion_group_id = 'TRUE', 
                            is_remove_conversion_tracker_id = 'TRUE', ), )
                    ],
        )

    def testGuaranteedCampaignServiceOperation(self):
        """Test GuaranteedCampaignServiceOperation"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
