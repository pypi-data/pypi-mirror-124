# coding: utf-8

"""
    Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! JAPAN Ads Display Ads API Reference

    <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/design/v6/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v6
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import yahoo_display_api
from yahoo_display_api.models.ad_group_service_value import AdGroupServiceValue  # noqa: E501
from yahoo_display_api.rest import ApiException

class TestAdGroupServiceValue(unittest.TestCase):
    """AdGroupServiceValue unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AdGroupServiceValue
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = yahoo_display_api.models.ad_group_service_value.AdGroupServiceValue()  # noqa: E501
        if include_optional :
            return AdGroupServiceValue(
                ad_group = yahoo_display_api.models.ad_group.AdGroup(
                    account_id = 56, 
                    ad_group_bidding_strategy = yahoo_display_api.models.ad_group_service_bidding_strategy.AdGroupServiceBiddingStrategy(
                        campaign_bidding_strategy_type = 'AUTO', 
                        max_cpc_bid_value = 56, 
                        max_cpv_bid_value = 56, 
                        max_vcpm_bid_value = 56, 
                        target_cpa_bid_value = 56, ), 
                    ad_group_id = 56, 
                    ad_group_name = '0', 
                    campaign_id = 56, 
                    campaign_name = '0', 
                    custom_parameters = yahoo_display_api.models.ad_group_service_custom_parameters.AdGroupServiceCustomParameters(
                        is_remove = 'TRUE', 
                        parameters = [
                            yahoo_display_api.models.ad_group_service_custom_parameter.AdGroupServiceCustomParameter(
                                key = '0', 
                                value = '0', )
                            ], ), 
                    device = [
                        'DESKTOP'
                        ], 
                    device_app = [
                        'APP'
                        ], 
                    device_os = [
                        'IOS'
                        ], 
                    device_os_version = '0', 
                    feed_set_id = 56, 
                    is_remove_tracking_url = 'TRUE', 
                    labels = [
                        yahoo_display_api.models.ad_group_service_label.AdGroupServiceLabel(
                            color = '0', 
                            description = '0', 
                            label_id = 56, 
                            label_name = '0', )
                        ], 
                    tracking_url = '0', 
                    user_status = 'ACTIVE', 
                    created_date = '0', ), 
                errors = [
                    yahoo_display_api.models.error.Error(
                        code = '0', 
                        message = '0', 
                        details = [
                            yahoo_display_api.models.error_detail.ErrorDetail(
                                request_key = '0', 
                                request_value = '0', )
                            ], )
                    ], 
                operation_succeeded = True
            )
        else :
            return AdGroupServiceValue(
        )

    def testAdGroupServiceValue(self):
        """Test AdGroupServiceValue"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
