# coding: utf-8

"""
    Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! JAPAN Ads Display Ads API Reference

    <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/design/v6/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v6
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import yahoo_display_api
from yahoo_display_api.models.report_definition_service_cross_campaign_reaches_report_condition import ReportDefinitionServiceCrossCampaignReachesReportCondition  # noqa: E501
from yahoo_display_api.rest import ApiException

class TestReportDefinitionServiceCrossCampaignReachesReportCondition(unittest.TestCase):
    """ReportDefinitionServiceCrossCampaignReachesReportCondition unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ReportDefinitionServiceCrossCampaignReachesReportCondition
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = yahoo_display_api.models.report_definition_service_cross_campaign_reaches_report_condition.ReportDefinitionServiceCrossCampaignReachesReportCondition()  # noqa: E501
        if include_optional :
            return ReportDefinitionServiceCrossCampaignReachesReportCondition(
                cross_campaign_type = 'CAMPAIGN_ID', 
                cross_campaign_ids = [
                    yahoo_display_api.models.report_definition_service_cross_campaign_id.ReportDefinitionServiceCrossCampaignId(
                        account = yahoo_display_api.models.report_definition_service_account.ReportDefinitionServiceAccount(
                            account_id = 56, 
                            product_type = 'YDA', ), 
                        campaign_id = 56, )
                    ], 
                cross_campaign_goals = [
                    yahoo_display_api.models.report_definition_service_cross_campaign_goal.ReportDefinitionServiceCrossCampaignGoal(
                        account = yahoo_display_api.models.report_definition_service_account.ReportDefinitionServiceAccount(
                            account_id = 56, 
                            product_type = 'YDA', ), 
                        campaign_goal = '0', )
                    ], 
                cross_campaign_buying_types = [
                    yahoo_display_api.models.report_definition_service_cross_campaign_buying.ReportDefinitionServiceCrossCampaignBuying(
                        account = yahoo_display_api.models.report_definition_service_account.ReportDefinitionServiceAccount(
                            account_id = 56, 
                            product_type = 'YDA', ), 
                        campaign_buying_type = 'AUCTION', )
                    ]
            )
        else :
            return ReportDefinitionServiceCrossCampaignReachesReportCondition(
        )

    def testReportDefinitionServiceCrossCampaignReachesReportCondition(self):
        """Test ReportDefinitionServiceCrossCampaignReachesReportCondition"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
