# coding: utf-8

"""
    Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! JAPAN Ads Display Ads API Reference

    <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/design/v6/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v6
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import yahoo_display_api
from yahoo_display_api.models.account_management_service_return_value import AccountManagementServiceReturnValue  # noqa: E501
from yahoo_display_api.rest import ApiException

class TestAccountManagementServiceReturnValue(unittest.TestCase):
    """AccountManagementServiceReturnValue unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AccountManagementServiceReturnValue
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = yahoo_display_api.models.account_management_service_return_value.AccountManagementServiceReturnValue()  # noqa: E501
        if include_optional :
            return AccountManagementServiceReturnValue(
                values = [
                    yahoo_display_api.models.account_management_service_value.AccountManagementServiceValue(
                        account_management = yahoo_display_api.models.account_management.AccountManagement(
                            account_id = 56, 
                            account_name = '0', 
                            account_payment = yahoo_display_api.models.account_management_service_payment.AccountManagementServicePayment(
                                invoice = yahoo_display_api.models.account_management_service_invoice.AccountManagementServiceInvoice(
                                    budget_amount = 56, ), 
                                payment_type = 'PREPAY', ), 
                            agency_person_name = '0', 
                            agency_prefecture_code = 'HOKKAIDO', 
                            auth_type = 'REFERABLE', 
                            auto_tagging_enabled = 'FALSE', 
                            client = yahoo_display_api.models.account_management_service_client.AccountManagementServiceClient(
                                building = '0', 
                                city = '0', 
                                client_person_name = '0', 
                                company_name = '0', 
                                company_name_kana = '0', 
                                enterprise_type = 'KABUSHIKI', 
                                enterprise_type_position = 'FRONT', 
                                phone_number = 'a', 
                                prefecture_code = 'HOKKAIDO', 
                                street1 = '0', 
                                street2 = '0', 
                                url = '0', 
                                url_type = 'PC', 
                                zip = 'a', ), 
                            client_type = 'AGENT', 
                            contact_biz_id = '0', 
                            delivery_status = 'ACTIVE', 
                            end_date = '0', 
                            is_test_account = 'TRUE', 
                            start_date = '0', 
                            status = 'INPROGRESS', ), 
                        errors = [
                            yahoo_display_api.models.error.Error(
                                code = '0', 
                                message = '0', 
                                details = [
                                    yahoo_display_api.models.error_detail.ErrorDetail(
                                        request_key = '0', 
                                        request_value = '0', )
                                    ], )
                            ], 
                        operation_succeeded = True, )
                    ]
            )
        else :
            return AccountManagementServiceReturnValue(
        )

    def testAccountManagementServiceReturnValue(self):
        """Test AccountManagementServiceReturnValue"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
