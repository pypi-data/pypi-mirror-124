# coding: utf-8

"""
    Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! JAPAN Ads Display Ads API Reference

    <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/design/v6/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v6
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import yahoo_display_api
from yahoo_display_api.models.guaranteed_simulation_service_package_page import GuaranteedSimulationServicePackagePage  # noqa: E501
from yahoo_display_api.rest import ApiException

class TestGuaranteedSimulationServicePackagePage(unittest.TestCase):
    """GuaranteedSimulationServicePackagePage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test GuaranteedSimulationServicePackagePage
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = yahoo_display_api.models.guaranteed_simulation_service_package_page.GuaranteedSimulationServicePackagePage()  # noqa: E501
        if include_optional :
            return GuaranteedSimulationServicePackagePage(
                total_num_entries = 56, 
                values = [
                    yahoo_display_api.models.guaranteed_simulation_service_package_value.GuaranteedSimulationServicePackageValue(
                        package = yahoo_display_api.models.guaranteed_simulation_service_package.GuaranteedSimulationServicePackage(
                            package_id = 56, 
                            package_history_id = 56, 
                            package_name = '0', 
                            selling_start_date = '0', 
                            selling_end_date = '0', 
                            ad_delivery_duration_start_date = '0', 
                            reservation_start_date = '0', 
                            reservation_end_date = '0', 
                            ad_delivery_duration_end_date = '0', 
                            buying_term = yahoo_display_api.models.guaranteed_simulation_service_buying_term.GuaranteedSimulationServiceBuyingTerm(
                                buying_term_type = 'SINGLE_DAY', 
                                single_day_buying_term = yahoo_display_api.models.guaranteed_simulation_service_single_day_buying_term.GuaranteedSimulationServiceSingleDayBuyingTerm(
                                    buying_single_day_term = 56, ), 
                                single_term_buying_term = yahoo_display_api.models.guaranteed_simulation_service_single_term_buying_term.GuaranteedSimulationServiceSingleTermBuyingTerm(
                                    buying_single_term_start_date = '0', 
                                    buying_single_term_end_date = '0', ), 
                                custom_range_buying_term = yahoo_display_api.models.guaranteed_simulation_service_custom_range_buying_term.GuaranteedSimulationServiceCustomRangeBuyingTerm(
                                    buying_term_date_min_range = 56, 
                                    buying_term_date_max_range = 56, ), ), 
                            pricing_package = yahoo_display_api.models.guaranteed_simulation_service_pricing_package.GuaranteedSimulationServicePricingPackage(
                                price_type = 'VIMPS_CUSTOM', 
                                vimps_custom_pricing_package = yahoo_display_api.models.guaranteed_simulation_service_vimps_custom_pricing_package.GuaranteedSimulationServiceVimpsCustomPricingPackage(
                                    fixed_lifetime_budget = 56, 
                                    minimum_purchase_budget = 56, 
                                    minimum_purchase_v_imps = 56, 
                                    maximum_purchase_v_imps = 56, ), 
                                vimps_sov_pricing_package = yahoo_display_api.models.guaranteed_simulation_service_vimps_sov_pricing_package.GuaranteedSimulationServiceVimpsSOVPricingPackage(
                                    fixed_lifetime_budget = 56, 
                                    sov_rate = 56, ), 
                                vimps_reach_pricing_package = yahoo_display_api.models.guaranteed_simulation_service_vimps_reach_pricing_package.GuaranteedSimulationServiceVimpsReachPricingPackage(
                                    fixed_lifetime_budget = 56, 
                                    viewable_reach = 56, ), 
                                slots_pricing_package = yahoo_display_api.models.guaranteed_simulation_service_slots_pricing_package.GuaranteedSimulationServiceSlotsPricingPackage(
                                    fixed_lifetime_budget = 56, 
                                    fixed_budget_apply_term_type = 'SINGLE_DAY', 
                                    selling_slots = 56, 
                                    minimum_buying_slots = 56, ), ), 
                            package_public_level = 'PUBLIC', 
                            sales_document = yahoo_display_api.models.guaranteed_simulation_service_sales_document.GuaranteedSimulationServiceSalesDocument(
                                file = yahoo_display_api.models.guaranteed_simulation_service_document_file.GuaranteedSimulationServiceDocumentFile(
                                    url = '0', 
                                    file_name = '0', ), ), 
                            promotional_document = yahoo_display_api.models.guaranteed_simulation_service_promotional_document.GuaranteedSimulationServicePromotionalDocument(
                                files = [
                                    yahoo_display_api.models.guaranteed_simulation_service_document_file.GuaranteedSimulationServiceDocumentFile(
                                        url = '0', 
                                        file_name = '0', )
                                    ], ), 
                            related_document = yahoo_display_api.models.guaranteed_simulation_service_related_document.GuaranteedSimulationServiceRelatedDocument(), 
                            ad_requirements = [
                                yahoo_display_api.models.guaranteed_simulation_service_ad_requirement.GuaranteedSimulationServiceAdRequirement(
                                    ad_type = 'BANNER_VIDEO_AD', 
                                    media_ad_format = '0', 
                                    aspect_ratio = '0', 
                                    ad_type_permission = 'FORBIDDEN', )
                                ], 
                            action_after_video_ad_tap = 'NONE', 
                            instream_duration_type = 'MAX_6_SECONDS', 
                            remarks = '0', 
                            package_permitted_viewable_frequency_cap = yahoo_display_api.models.guaranteed_simulation_service_package_permitted_viewable_frequency_cap.GuaranteedSimulationServicePackagePermittedViewableFrequencyCap(
                                viewable_frequency_cap_permission = 'FORBIDDEN', 
                                viewable_frequency_cap_levels = [
                                    'CAMPAIGN'
                                    ], 
                                permitted_viewable_frequency_cap_time_units = [
                                    'DAY'
                                    ], 
                                permitted_viewable_frequency_cap_impression_min = 56, 
                                permitted_viewable_frequency_cap_impression_max = 56, ), 
                            package_permitted_ad_place_types = yahoo_display_api.models.guaranteed_simulation_service_package_permitted_ad_place_types.GuaranteedSimulationServicePackagePermittedAdPlaceTypes(
                                permission = 'FORBIDDEN', 
                                ad_place_types = [
                                    'YAHOO_JAPAN_TOP'
                                    ], ), 
                            package_permitted_gender_target = yahoo_display_api.models.guaranteed_simulation_service_package_permitted_gender_target.GuaranteedSimulationServicePackagePermittedGenderTarget(
                                target_permission = 'FORBIDDEN', 
                                permitted_targets = [
                                    yahoo_display_api.models.guaranteed_simulation_service_permitted_gender_target.GuaranteedSimulationServicePermittedGenderTarget(
                                        target_id = '0', 
                                        gender = 'ST_MALE', )
                                    ], ), 
                            package_permitted_age_target = yahoo_display_api.models.guaranteed_simulation_service_package_permitted_age_target.GuaranteedSimulationServicePackagePermittedAgeTarget(), 
                            package_permitted_audience_category_target = yahoo_display_api.models.guaranteed_simulation_service_permitted_audience_category_target_list.GuaranteedSimulationServicePermittedAudienceCategoryTargetList(), 
                            package_permitted_geo_target = yahoo_display_api.models.guaranteed_simulation_service_package_permitted_geo_target.GuaranteedSimulationServicePackagePermittedGeoTarget(), 
                            package_permitted_ad_schedule_target = yahoo_display_api.models.guaranteed_simulation_service_package_permitted_ad_schedule_target.GuaranteedSimulationServicePackagePermittedAdScheduleTarget(), 
                            package_permitted_device_target = yahoo_display_api.models.guaranteed_simulation_service_package_permitted_device_target.GuaranteedSimulationServicePackagePermittedDeviceTarget(), 
                            package_permitted_os_target = yahoo_display_api.models.guaranteed_simulation_service_package_permitted_os_target.GuaranteedSimulationServicePackagePermittedOsTarget(), 
                            package_permitted_app_target = yahoo_display_api.models.guaranteed_simulation_service_package_permitted_app_target.GuaranteedSimulationServicePackagePermittedAppTarget(), 
                            package_permitted_placement_category_target = yahoo_display_api.models.guaranteed_simulation_service_package_permitted_placement_category_target.GuaranteedSimulationServicePackagePermittedPlacementCategoryTarget(
                                placement_monopoly_flg = 'FALSE', 
                                placement_category_detail_max = 56, ), 
                            package_permitted_position_target = yahoo_display_api.models.guaranteed_simulation_service_package_permitted_position_target.GuaranteedSimulationServicePackagePermittedPositionTarget(), 
                            package_permitted_site_retargeting_target = yahoo_display_api.models.guaranteed_simulation_service_package_permitted_site_retargeting_target.GuaranteedSimulationServicePackagePermittedSiteRetargetingTarget(), ), 
                        errors = [
                            yahoo_display_api.models.error.Error(
                                code = '0', 
                                message = '0', 
                                details = [
                                    yahoo_display_api.models.error_detail.ErrorDetail(
                                        request_key = '0', 
                                        request_value = '0', )
                                    ], )
                            ], 
                        operation_succeeded = True, )
                    ]
            )
        else :
            return GuaranteedSimulationServicePackagePage(
        )

    def testGuaranteedSimulationServicePackagePage(self):
        """Test GuaranteedSimulationServicePackagePage"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
