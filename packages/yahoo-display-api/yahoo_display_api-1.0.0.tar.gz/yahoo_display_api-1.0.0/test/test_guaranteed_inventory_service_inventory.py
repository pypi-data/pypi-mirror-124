# coding: utf-8

"""
    Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! JAPAN Ads Display Ads API Reference

    <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/design/v6/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>   # noqa: E501

    The version of the OpenAPI document: v6
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import yahoo_display_api
from yahoo_display_api.models.guaranteed_inventory_service_inventory import GuaranteedInventoryServiceInventory  # noqa: E501
from yahoo_display_api.rest import ApiException

class TestGuaranteedInventoryServiceInventory(unittest.TestCase):
    """GuaranteedInventoryServiceInventory unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test GuaranteedInventoryServiceInventory
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = yahoo_display_api.models.guaranteed_inventory_service_inventory.GuaranteedInventoryServiceInventory()  # noqa: E501
        if include_optional :
            return GuaranteedInventoryServiceInventory(
                account_id = 56, 
                lifetime_budget = 56, 
                reach = 56, 
                v_imps = 56, 
                sov_rate = 56, 
                slots = 56, 
                campaign_goal = '0', 
                start_date = '0', 
                end_date = '0', 
                max_sellable_v_imps = 56, 
                max_sellable_reach = 56, 
                max_reservable_v_imps = 56, 
                max_reservable_slots = 56, 
                lower_budget_limit = 56, 
                upper_budget_limit = 56, 
                package_id = 56, 
                package_name = '0', 
                package_history_id = 56, 
                ad_category_ids = [
                    56
                    ], 
                promotion_url = '0', 
                minimum_purchase_v_imps = 56, 
                maximum_purchase_v_imps = 56, 
                inventory_unit = 'DAILY', 
                campaign_bidding_strategy_type = 'MAX_VCPM', 
                viewable_frequency_cap = yahoo_display_api.models.guaranteed_campaign_service_viewable_frequency_cap.GuaranteedCampaignServiceViewableFrequencyCap(
                    frequency_level = 'CAMPAIGN', 
                    frequency_time_unit = 'DAY', 
                    v_imps = 56, ), 
                reservation_status = 'RESERVABLE', 
                unreservable_reason = 'NOT_ENOUGH_DELIVERY_TARGET', 
                ad_requirements = [
                    yahoo_display_api.models.guaranteed_inventory_service_ad_requirement.GuaranteedInventoryServiceAdRequirement(
                        ad_type = 'BANNER_VIDEO_AD', 
                        media_ad_format = '0', 
                        aspect_ratio = '0', )
                    ], 
                inventory_detail_status = 'WAIT', 
                action_after_video_ad_tap = 'NONE', 
                price_type = 'VIMPS_CUSTOM', 
                placement_monopoly_flg = 'FALSE', 
                prediction_results = [
                    yahoo_display_api.models.guaranteed_inventory_service_prediction_result.GuaranteedInventoryServicePredictionResult(
                        lifetime_budget = 56, 
                        reach = 56, 
                        v_imps = 56, 
                        vcpm = 56, 
                        viewable_frequency = 1.337, 
                        sov_rate = 1.337, )
                    ], 
                requested_condition_prediction_result = yahoo_display_api.models.guaranteed_inventory_service_prediction_result.GuaranteedInventoryServicePredictionResult(
                    lifetime_budget = 56, 
                    reach = 56, 
                    v_imps = 56, 
                    vcpm = 56, 
                    viewable_frequency = 1.337, 
                    sov_rate = 1.337, ), 
                inventory_result = [
                    yahoo_display_api.models.guaranteed_inventory_service_inventory_result.GuaranteedInventoryServiceInventoryResult(
                        start_date = '0', 
                        end_date = '0', 
                        max_sellable_v_imps = 56, 
                        max_reservable_v_imps = 56, 
                        selling_slots = 56, 
                        max_reservable_slots = 56, 
                        unavailable_reasons = [
                            yahoo_display_api.models.guaranteed_inventory_service_unavailable_reason.GuaranteedInventoryServiceUnavailableReason(
                                date = '0', 
                                hours = [
                                    56
                                    ], 
                                genders = [
                                    'ST_MALE'
                                    ], 
                                ages = [
                                    'GT_RANGE13_14'
                                    ], 
                                devices = [
                                    'DESKTOP'
                                    ], 
                                audience_categories = [
                                    '0'
                                    ], )
                            ], 
                        unreservable_reason = 'NOT_ENOUGH_DELIVERY_TARGET', )
                    ], 
                targets = [
                    yahoo_display_api.models.guaranteed_inventory_service_ad_group_target.GuaranteedInventoryServiceAdGroupTarget(
                        target = yahoo_display_api.models.guaranteed_inventory_service_target.GuaranteedInventoryServiceTarget(
                            ad_schedule_target = yahoo_display_api.models.guaranteed_inventory_service_ad_schedule_target.GuaranteedInventoryServiceAdScheduleTarget(
                                day_of_week = 'MONDAY', 
                                end_hour = 56, 
                                start_hour = 56, ), 
                            age_target = yahoo_display_api.models.guaranteed_inventory_service_age_target.GuaranteedInventoryServiceAgeTarget(
                                age = 'GT_RANGE13_14', ), 
                            app_target = yahoo_display_api.models.guaranteed_inventory_service_app_target.GuaranteedInventoryServiceAppTarget(
                                device_app_type = 'APP', ), 
                            audience_category_target = yahoo_display_api.models.guaranteed_inventory_service_audience_category_target.GuaranteedInventoryServiceAudienceCategoryTarget(
                                audience_category_type = '0', 
                                category_name_en = '0', 
                                category_name_ja = '0', ), 
                            device_target = yahoo_display_api.models.guaranteed_inventory_service_device_target.GuaranteedInventoryServiceDeviceTarget(
                                device_type = 'DESKTOP', ), 
                            gender_target = yahoo_display_api.models.guaranteed_inventory_service_gender_target.GuaranteedInventoryServiceGenderTarget(
                                gender = 'ST_MALE', ), 
                            geo_target = yahoo_display_api.models.guaranteed_inventory_service_geo_target.GuaranteedInventoryServiceGeoTarget(
                                geo_name_en = '0', 
                                geo_name_ja = '0', ), 
                            os_target = yahoo_display_api.models.guaranteed_inventory_service_os_target.GuaranteedInventoryServiceOsTarget(
                                device_os_type = 'IOS', ), 
                            placement_category_target = yahoo_display_api.models.guaranteed_inventory_service_placement_category_target.GuaranteedInventoryServicePlacementCategoryTarget(
                                placement_category_list_name = '0', ), 
                            placement_category_detail_target = yahoo_display_api.models.ad_group_target_service_placement_category_detail_target.AdGroupTargetServicePlacementCategoryDetailTarget(
                                placement_category_name_ja = '0', 
                                placement_category_name_en = '0', 
                                placement_category_type = 'PAGE', ), 
                            position_target = yahoo_display_api.models.guaranteed_inventory_service_position_target.GuaranteedInventoryServicePositionTarget(
                                position_type = 'INSTREAM_PREROLL', ), 
                            site_retargeting_target = yahoo_display_api.models.guaranteed_inventory_service_site_retargeting_target.GuaranteedInventoryServiceSiteRetargetingTarget(
                                account_id = 56, 
                                account_name = '0', 
                                target_list_name = '0', 
                                deliver_type = 'INCLUDE', ), 
                            target_id = '0', 
                            target_type = 'AD_SCHEDULE_TARGET', ), )
                    ]
            )
        else :
            return GuaranteedInventoryServiceInventory(
        )

    def testGuaranteedInventoryServiceInventory(self):
        """Test GuaranteedInventoryServiceInventory"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
