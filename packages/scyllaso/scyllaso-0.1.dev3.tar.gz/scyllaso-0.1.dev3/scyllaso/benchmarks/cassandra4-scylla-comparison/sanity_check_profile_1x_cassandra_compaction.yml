# NOTE: this is a minimal setup, supposed to mimick 1-node compaction benchmarks.
# Not for production! Use only to qualitatively test that "everything's fine"

## Usage:
# export SSO=<PATH_TO_ORCHESTRATOR_ROOT>
# export PATH=$SSO/bin:$PATH
# cd cassandra4-scylla-comparison
# AWS_ACCESS_KEY_ID=XXX AWS_SECRET_ACCESS_KEY=YYY provision_terraform ec2 --workspace sanity_check_profile_1x_cassandra_compaction
##  NOTE: Now monitor the output (human interaction will be needed)
# yes yes | ./benchmark_major_compaction.py sanity_check_profile_1x_cassandra_compaction
# ./download_prometheus.py sanity_check_profile_1x_cassandra_compaction
# AWS_ACCESS_KEY_ID=XXX AWS_SECRET_ACCESS_KEY=YYY unprovision_terraform ec2 --workspace sanity_check_profile_1x_cassandra_compaction
##  NOTE: Now monitor the output (human interaction will be needed)

# Use less RAM and fewer threads than normally
cassandra_extra_env_opts: JVM_OPTS="$JVM_OPTS -Xms8G -Xmx8G -XX:ConcGCThreads=2 -XX:ParallelGCThreads=2"

region: us-east-2
availability_zone: us-east-2c

cluster_size: 1
cluster_instance_type: i3.large

cluster_type: cassandra
# Ubuntu 20.04 LTS
cluster_user: ubuntu
cluster_ami: ami-06382629a9eb569e3
cassandra_version: 4.0.0

prometheus_instance_type: c5.large
prometheus_ami: ami-0dd9f0e7df0f0a138

loadgenerator_instance_type: c5n.large
loadgenerator_size: 3
loadgenerator_ami: ami-0996d3051b72b5b2c
loadgenerator_user: ubuntu

ssh_options: -i key -o StrictHostKeyChecking=no -o ConnectTimeout=60

compaction_strategy: SizeTieredCompactionStrategy

prometheus_user: ubuntu
target_dataset_size_gb: 1

# Loading operations per second
loading_total_throttle: 3000

# Background operations per second
background_total_load_ops: 500
