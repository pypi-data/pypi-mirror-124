	-E, --extended-regexp
		Interpret PATTERN as an extended regular expression (ERE, see below).

	-F, --fixed-strings
		Interpret PATTERN as a list of fixed strings (instead of regular expressions), separated by newlines, any of which is to be matched.

	-G, --basic-regexp
		Interpret PATTERN as a basic regular expression (BRE, see below).  This is the default.

	-P, --perl-regexp
		Interpret the pattern as a Perl-compatible regular expression (PCRE).  This is experimental and grep -P may warn of unimplemented features.

   Matching Control
	-e PATTERN, --regexp=PATTERN
		Use  PATTERN  as the pattern.  If this option is used multiple times or is combined with the -f (--file) option, search for all patterns given. 
		This option can be used to protect a pattern beginning with “-”.

	-f FILE, --file=FILE
		Obtain patterns from FILE, one per line.  If this option is used multiple times or is combined with the -e (--regexp) option, search for all  patterns  given.
		 The  empty file contains zero patterns, and therefore matches nothing.

	-i, --ignore-case
		Ignore case distinctions, so that characters that differ only in case match each other.

	-v, --invert-match
		Invert the sense of matching, to select non-matching lines.

	-w, --word-regexp
		Select  only  those  lines containing matches that form whole words.
		The test is that the matching substring must either be at the beginning of the line, or preceded by a non-word constituent character.
		Similarly, it must be either at the end of the line or followed by a non-word  constituent  character.   Word-constituent  characters  areletters, digits, and the underscore.
		This option has no effect if -x is also specified.

	-x, --line-regexp
		Select  only those matches that exactly match the whole line.
		For a regular expression pattern, this is like parenthesizing the pattern and then surrounding it with ^ and $
