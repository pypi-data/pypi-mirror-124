Metadata-Version: 2.1
Name: pycryptofile
Version: 1.0.8
Summary: pycryptofile allows to encrypt/decrypt using ssh keys
Home-page: https://github.com/stormalf/file_transfer
Author: Stormalf
Author-email: stormalf.dev@gmail.com
License: UNKNOWN
Project-URL: Bug Reports, https://github.com/stormalf/file_transfer/issues
Project-URL: Source, https://github.com/stormalf/file_transfer/
Keywords: pycryptofile
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3 :: Only
Requires-Python: >=3.6, <4
Description-Content-Type: text/markdown
License-File: LICENSE.txt
Requires-Dist: pycrypto
Requires-Dist: setuptools (>=40.8.0)
Requires-Dist: wheel
Requires-Dist: argparse

# pyCryptoFile

pyCryptoFile contains some functions to encrypt/decrypt using ssh keys.

[The source for this project is available here][src].

---

pyCryptoFile module can be called in command line : python3 pyCryptoFile.py -h

usage: pyCryptoFile.py [-h] [-V] [-f FILE] [-m {encrypt,decrypt}] [-k KEYFILE]
[-o OUTPUTFILE]

pyCryptoFile is a python3 program that encrypts, decrypts using ssh key encryption

optional arguments:
-h, --help show this help message and exit
-V, --version Display the version of pyCryptoFile
-f FILE, --file FILE file to encrypt/decrypt
-m {encrypt,decrypt}, --mode {encrypt,decrypt}
encrypt/decrypt mode
-k KEYFILE, --keyfile KEYFILE
public key file if encrypt mode or private key file if decrypt
mode
-o OUTPUTFILE, --outputfile OUTPUTFILE
outputfile by default it will be the file with .enc or .dec
extension

example to encrypt a file content and put in another file :

    python3 pyCryptoFile.py -f mytext2.txt -k ~/.ssh/id_rsa.pub

it generates by default the same file with .enc extension like mytext2.txt.enc.
You can use -o option to generate specific output file

    python3 pyCryptoFile.py -f mytext2.txt -k ~/.ssh/id_rsa.pub -o myoutput.txt

example to decrypt a file content and put in another file :

    python3 pyCryptoFile.py -f mytextcrypted.txt -k ~/.ssh/id_rsa -m decrypt

By default it generates the same file with .dec extension like mytextcrypted.txt.dec. You can specify a specific output file with -o option

    python3 pyCryptoFile.py -f mytextcrypted.txt -k ~/.ssh/id_rsa -m decrypt -o myoutput.txt

---

[packaging guide]: https://packaging.python.org
[distribution tutorial]: https://packaging.python.org/tutorials/packaging-projects/
[src]: https://github.com/stormalf/file_transfer
[rst]: http://docutils.sourceforge.net/rst.html
[md]: https://tools.ietf.org/html/rfc7764#section-3.5 "CommonMark variant"
[md use]: https://packaging.python.org/specifications/core-metadata/#description-content-type-optional

# release notes

1.0.7 fix on pyCryptoFile function wrong tab before return encoded and also fixing the bytes to crypt and encrypt to 128 and 344.

1.0.8 adding new option to have an output file and tested with gifs and pdfs and now it works better.


