
# python wrapper for package gomssql_python_go/gomssql_python_go within overall package gomssql_python_go
# This is what you import to use the package.
# File is generated by gopy. Do not edit.
# gopy build -output=gomssql_python/built -symbols=true -vm=/Users/edwardbeech/.venv/gomssql-python/bin/python ./gomssql_python_go

# the following is required to enable dlopen to open the _go.so file
import os,sys,inspect,collections
cwd = os.getcwd()
currentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))
os.chdir(currentdir)
from gomssql_python.built import _gomssql_python_go
os.chdir(cwd)

# to use this code in your end-user python file, import it as follows:
# from gomssql_python_go from gomssql_python.built import gomssql_python_go
# and then refer to everything using gomssql_python_go. prefix
# packages imported by this package listed below:

from gomssql_python.built import go



# ---- Types ---


#---- Enums from Go (collections of consts with same type) ---


#---- Constants from Go: Python can only ask that you please don't change these! ---


# ---- Global Variables: can only use functions to access ---


# ---- Interfaces ---


# ---- Structs ---


# ---- Slices ---


# ---- Maps ---


# ---- Constructors ---


# ---- Functions ---
def RPCConnect(sessionID):
	"""RPCConnect(long sessionID) str
	
	RPCConnect connects
	"""
	return _gomssql_python_go.gomssql_python_go_RPCConnect(sessionID)
def RPCExecute(sessionID, query):
	"""RPCExecute(long sessionID, str query) long, str
	
	RPCExecute executes a query
	"""
	return _gomssql_python_go.gomssql_python_go_RPCExecute(sessionID, query)
def RPCFetchAll(sessionID, rowsID):
	"""RPCFetchAll(long sessionID, long rowsID) str, str
	
	RPCFetchAll returns results
	"""
	return _gomssql_python_go.gomssql_python_go_RPCFetchAll(sessionID, rowsID)
def RPCGetRowsAffected(sessionID, resultID):
	"""RPCGetRowsAffected(long sessionID, long resultID) long, str
	
	RPCGetRowsAffected returns the last inserted and affected row counts
	"""
	return _gomssql_python_go.gomssql_python_go_RPCGetRowsAffected(sessionID, resultID)
def RPCQuery(sessionID, query):
	"""RPCQuery(long sessionID, str query) long, str
	
	RPCQuery executes a query
	"""
	return _gomssql_python_go.gomssql_python_go_RPCQuery(sessionID, query)
def NewRPCSession(dataSourceName):
	"""NewRPCSession(str dataSourceName) long
	
	NewRPCSession creates a new session and returns the sessionID
	"""
	return _gomssql_python_go.gomssql_python_go_NewRPCSession(dataSourceName)
def RPCClose(sessionID):
	"""RPCClose(long sessionID) str
	
	RPCClose closes
	"""
	return _gomssql_python_go.gomssql_python_go_RPCClose(sessionID)


