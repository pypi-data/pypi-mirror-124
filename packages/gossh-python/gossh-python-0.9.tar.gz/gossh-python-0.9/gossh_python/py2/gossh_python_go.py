
# python wrapper for package gossh_python/gossh_python_go within overall package gossh_python_go
# This is what you import to use the package.
# File is generated by gopy. Do not edit.
# gopy build -output=gossh_python/py2 -symbols=true -vm=/Users/edwardbeech/.venv/gossh-python/bin/python gossh_python/gossh_python_go

# the following is required to enable dlopen to open the _go.so file
import os,sys,inspect,collections
cwd = os.getcwd()
currentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))
os.chdir(currentdir)
import _gossh_python_go
os.chdir(cwd)

# to use this code in your end-user python file, import it as follows:
# from gossh_python_go import gossh_python_go
# and then refer to everything using gossh_python_go. prefix
# packages imported by this package listed below:

import go



# ---- Types ---


#---- Constants from Go: Python can only ask that you please don't change these! ---


# ---- Global Variables: can only use functions to access ---


# ---- Interfaces ---


# ---- Structs ---


# ---- Slices ---


# ---- Maps ---


# ---- Constructors ---


# ---- Functions ---
def RPCClose(sessionID):
	"""RPCClose(long sessionID) str
	
	RPCClose closes
	"""
	return _gossh_python_go.gossh_python_go_RPCClose(sessionID)
def RPCConnect(sessionID):
	"""RPCConnect(long sessionID) str
	
	RPCConnect connects
	"""
	return _gossh_python_go.gossh_python_go_RPCConnect(sessionID)
def RPCGetShell(sessionID, terminal, height, width):
	"""RPCGetShell(long sessionID, str terminal, int height, int width) str
	
	RPCGetShell gets a shell
	"""
	return _gossh_python_go.gossh_python_go_RPCGetShell(sessionID, terminal, height, width)
def RPCRead(sessionID, size):
	"""RPCRead(long sessionID, int size) str, str
	
	RPCRead reads data
	"""
	return _gossh_python_go.gossh_python_go_RPCRead(sessionID, size)
def RPCWrite(sessionID, data):
	"""RPCWrite(long sessionID, str data) str
	
	RPCWrite reads data
	"""
	return _gossh_python_go.gossh_python_go_RPCWrite(sessionID, data)
def SetPyPy(goRun=False):
	"""SetPyPy() 
	
	SetPyPy is used by the Python side to declare whether or not we're running under PyPy (can't be discovered on the Go side)
	"""
	_gossh_python_go.gossh_python_go_SetPyPy(goRun)
def GetPyPy():
	"""GetPyPy() bool
	
	GetPyPy returns true if we're running under PyPy
	"""
	return _gossh_python_go.gossh_python_go_GetPyPy()
def NewRPCSession(hostname, username, password, port, timeout):
	"""NewRPCSession(str hostname, str username, str password, int port, int timeout) long
	
	NewRPCSession creates a new session and returns the sessionID
	"""
	return _gossh_python_go.gossh_python_go_NewRPCSession(hostname, username, password, port, timeout)


